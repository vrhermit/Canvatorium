{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/components/SidebarNav.vue","webpack:///./src/components/SidebarNav.vue?ad9d","webpack:///./src/App.vue?8ecf","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?f63c","webpack:///./src/labs/Lab000.vue","webpack:///./src/lab-shared/LabCamera.js","webpack:///./src/lab-shared/LabColors.js","webpack:///./src/lab-shared/LabLights.js","webpack:///./src/lab-shared/LabRoom.js","webpack:///./src/scenes/Lab000Wrapper.js","webpack:///./src/labs/Lab000.vue?aa8e","webpack:///./src/components/LabLayout.vue","webpack:///./src/components/LabLayout.vue?8f6d","webpack:///./src/labs/Lab001.vue","webpack:///./src/labs/Lab001.vue?a71d","webpack:///./src/labs/Lab002.vue","webpack:///./src/labs/Lab002.vue?14d8","webpack:///./src/labs/Lab003.vue","webpack:///./src/labs/Lab003.vue?c0fd","webpack:///./src/labs/Lab004.vue","webpack:///./src/labs/Lab004.vue?75f6","webpack:///./src/labs/Lab005.vue","webpack:///./src/labs/Lab005.vue?6cc8","webpack:///./src/labs/Lab006.vue","webpack:///./src/labs/Lab006.vue?aa91","webpack:///./src/lab-shared/LabConsole.js","webpack:///./src/labs/Lab007.vue","webpack:///./src/labs/Lab007.vue?5b79","webpack:///./src/lab-shared/LabPlayer.js","webpack:///./src/labs/Lab008.vue","webpack:///./src/labs/Lab008.vue?2e2f","webpack:///./src/composables/TitleCard.js","webpack:///./src/labs/Lab009.vue","webpack:///./src/labs/Lab009.vue?4036","webpack:///./src/labs/Lab010.vue","webpack:///./src/labs/Lab010.vue?dc2c","webpack:///./src/labs/Lab011.vue","webpack:///./src/labs/Lab011.vue?5683","webpack:///./src/labs/Lab012.vue","webpack:///./src/labs/Lab012.vue?2953","webpack:///./src/labs/Lab014.vue","webpack:///./src/labs/Lab014.vue?89ec","webpack:///./src/labs/Lab015.vue","webpack:///./src/labs/Lab015.vue?9930","webpack:///./src/labs/Lab016.vue","webpack:///./src/labs/Lab016.vue?c79c","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/components/LabLayout.vue?be53","webpack:///./src/views/Home.vue?1e41","webpack:///./src/labs/Lab000.vue?eb2d","webpack:///./src/App.vue?18de"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","class","id","$router","options","routes","item","to","path","meta","title","subtitle","status","__exports__","components","SidebarNavVue","SidebarNav","render","ref","addLabCamera","canvas","scene","camera","BABYLON","Math","PI","wheelDeltaPercentage","upperBetaLimit","lowerRadiusLimit","upperRadiusLimit","setPosition","setTarget","attachControl","LabColors","purple","FromHexString","blue","teal","cyan","green","yellow","orange","red","dark1","dark2","dark3","dark4","light1","light2","light3","light4","addLabLights","ambientLight1","intensity","ambientLight2","clearColor","addLabRoom","ground","CreateGround","height","width","subdivisions","sideOrientation","groundMaterial","MAT","majorUnitFrequency","minorUnitFrequency","gridRatio","backFaceCulling","mainColor","lineColor","opacity","material","wall1","rotation","position","wall2","clone","wall3","wall4","Lab000Wrapper","engine","createScene","getCameraByName","group","makeCard","createDefaultXRExperienceAsync","floorMeshes","xrDefault","xrHelper","baseExperience","info","runRenderLoop","plane","CreatePlane","y","advancedTexture","GUI","CreateForMesh","cardText","text","color","fontSize","addControl","scaling","mounted","getElementById","$route","unmarkedLabNotes","props","labNotes","String","default","computed","parse","this","log","bjsCanvas","makeBox","colorName","parent","mat","diffuseColor","specularColor","mesh","CreateBox","size","manager","anchor","sample","count","makeButton","button","linkToTransformNode","text1","content","onPointerUpObservable","add","newValue","oldValue","texture","getTextureByName","getControlByName","makeAddButton","makeSubButton","xr","sessionManager","onXRSessionInit","session","onInitialXRPoseSetObservable","xrCamera","z","input","onControllerAddedObservable","controller","onMotionControllerInitObservable","motionController","handness","xr_ids","getComponentIds","triggerComponent","getComponent","onButtonStateChangedObservable","pressed","squeezeComponent","thumbstickComponent","onAxisValueChangedObservable","axes","x","abuttonComponent","bbuttonComponent","router","createLabConsole","scrollViewer","loggerText","conLogData","reactive","consoleIsVisible","overrideConsole","_privateLog","toString","arguments","grabMaterial","grab","depth","sixDofDragBehavior","addBehavior","card","addChild","cardMaterial","isVisible","panel","sv","thickness","background","barSize","barColor","verticalAlignment","VERTICAL_ALIGNMENT_TOP","tb","textWrapping","paddingTop","paddingLeft","paddingRight","paddingBottom","horizontalAlignment","HORIZONTAL_ALIGNMENT_LEFT","textHorizontalAlignment","textVerticalAlignment","clearButton","CreateSimpleButton","HORIZONTAL_ALIGNMENT_RIGHT","onPointerClickObservable","setConsoleTransform","rotateTo","lookAt","toggleConsole","xrController","grip","tmpRay","Infinity","getWorldPointerRayToRef","newPosition","origin","direction","newRotation","newScale","watch","logData","join","resizeToFit","verticalBar","yButtonComponent","createLabPlayer","teleportMeshes","xButtonComponent","aButtonComponent","bButtonComponent","near","controlScaling","button0","addButton","button1","button2","defaultBehavior","followBehavior","defaultDistance","minimumDistance","maximumDistance","pitchOffset","createTitleCard","titleTextBlock","top","fontStyle","subtitleTextBlock","buttonPrev","textPrev","buttonNext","textNext","makeGrabbable","model","assign","startInteraction","pointerInfo","controllerMesh","grabbedPointerId","originalParent","pointerId","setParent","endInteraction","selectedMeshes","onPointerObservable","pickInfo","hit","pickedMesh","state","IN_XR","xrInput","pointerSelection","getXRControllerByPointerId","rootMesh","activeCamera","POINTERDOWN","POINTERUP","grabMat1","grab1","grabMat2","grab2","grabMat3","grab3","grabMat4","grab4","boundingBox","MakeNotPickableAndWrapInBoundingBox","allowMultiPointers","multiPointerScaleBehavior","grabMat5","grab5","pointerDragBehavior","dragAxis","cardMat","cardWidth","cardHeight","cardThickness","isPickable","boundsWidth","boundsHeight","boundsPlane","grabMat6","grab6","planeDragBehavior","dragPlaneNormal","forward","useObjectOrientationForDragging","validateDrag","targetPosition","bounds","getBoundingInfo","Clamp","minimum","maximum","gizMode","boxMat","box","utilLayer","positionGizmo","attachedMesh","scaleRatio","updateGizmoRotationToMatchAttachedMesh","updateGizmoPositionToMatchAttachedMesh","rotationGizmo","scaleGizmo","appBar","scaleInPlace","margin","rows","positionButton","rotationButton","scaleButton","behavior","boundingBox1","boundingBox2","boundingBox3","gizmoManager","positionGizmoEnabled","rotationGizmoEnabled","scaleGizmoEnabled","boundingBoxGizmoEnabled","attachableMeshes","onkeydown","code","newVal","subjectMat","subject","CreateSphere","diameter","lerpTime","attach","subjectMat2","subject2","followBehavior2","ignoreCameraPitchAndRoll","sixDofDragBehavior2","gizmo1","gizmo2","gizmo3","snapDistance","onSnapObservable","gizmo4","setEnabledRotationAxis","scaleBoxSize","onScaleBoxDragEndObservable","getSize","scaleTo","round","markAsDirty","dragX","undo","redo","gizmo","oldVal","component","Home","Lab000","Lab001","Lab002","Lab003","Lab004","Lab005","Lab006","Lab007","Lab008","Lab009","Lab010","Lab011","Lab012","Lab014","Lab015","Lab016","createRouter","history","createWebHistory","createStore","mutations","actions","createApp","App","use","store","mount"],"mappings":"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","file":"js/app.9c878e91.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"39aef87c\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Canvatorium/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\r\n  <div class=\"flex-grid\">\r\n    <div id=\"nav\" class=\"sidebar\">\r\n      <h1>Canvatorium</h1>\r\n      <p>An experimental design lab for spatial computing.</p>\r\n\r\n      <SidebarNavVue />\r\n    </div>\r\n    <div class=\"main\">\r\n      <router-view />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SidebarNavVue from \"./components/SidebarNav.vue\";\r\nexport default {\r\n  components: {\r\n    SidebarNavVue,\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody,\r\nhtml {\r\n  overflow: hidden;\r\n  background: #0b0d10;\r\n}\r\ncanvas {\r\n  width: 100%;\r\n  height: calc(100vh - 10rem);\r\n  /* padding: auto; */\r\n}\r\n\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: white;\r\n}\r\n\r\n.flex-grid {\r\n  display: flex;\r\n}\r\n\r\n.col {\r\n  margin-left: 0.5rem;\r\n  margin-right: 0.5rem;\r\n  padding: 1rem;\r\n}\r\n\r\n.sidebar {\r\n  flex: 1;\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.main {\r\n  flex: 4;\r\n  /* padding: 1rem; */\r\n}\r\n\r\n.fail {\r\n  background: #eb3b5a;\r\n  padding: 2px 4px;\r\n  margin-left: 6px;\r\n  border-radius: 8px;\r\n  color: white;\r\n}\r\n\r\n#nav {\r\n  padding: 0px;\r\n}\r\n\r\n#nav a {\r\n  color: #d3d9e1;\r\n}\r\n\r\n#nav a.router-link-exact-active {\r\n  color: #2d98da;\r\n}\r\n\r\na {\r\n  color: #2d98da;\r\n}\r\n\r\n.nav-button {\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 1rem;\r\n  display: block;\r\n  border-bottom: 1px solid #b4becc;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 0.5rem;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2a323e;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #53637b;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #53637b;\r\n}\r\n\r\n.babylonVRicon {\r\n  top: 100px;\r\n}\r\n</style>\r\n","<template>\r\n  <div v-for=\"item of $router.options.routes\" v-bind:key=\"item.name\">\r\n    <router-link class=\"nav-button\" :to=\"item.path\">\r\n      {{ item?.meta?.title || item?.name }}\r\n      <span v-if=\"item?.meta?.subtitle\">\r\n        - {{ item?.meta?.subtitle || \"\" }}</span\r\n      >\r\n      <span v-if=\"item?.meta?.status === 'failed'\" class=\"fail\">X</span>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./SidebarNav.vue?vue&type=template&id=745d0fb4\"\nimport script from \"./SidebarNav.vue?vue&type=script&lang=js\"\nexport * from \"./SidebarNav.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Repos\\\\Canvatorium\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=799c420f\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=799c420f&lang=css\"\n\nimport exportComponent from \"C:\\\\Repos\\\\Canvatorium\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"home\">\n    <p>Everything about this project is a work in progress.</p>\n    <p>\n      This loosely structured project is a place where I can prototype and\n      experiment with UI/UX for spatial interfaces. Some of my ideas include:\n    </p>\n\n    <ul>\n      <li>Using Babylon JS with the Vue 3 Composition API and script setup</li>\n      <li>Reactive data on Babylon JS GUI</li>\n      <li>Reactive/interactive controls with Babylon JS GUI</li>\n      <li>\n        Laying out data in 3D Building controls for common data editing tasks\n      </li>\n      <li>\n        Navigating data as if each record were an object in 3D Exploring\n        productive workflows\n      </li>\n      <li>\n        Replacing some of the flat-screen work that I do in various apps and\n        sites\n      </li>\n      <li>Working with various APIs and databases</li>\n      <li>Detailing and documenting common Babylon GUI workflows</li>\n    </ul>\n\n    <p>\n      The unit of account for this project is the <em>lab</em>. Each lab is a\n      place where I can explore a concept or idea. In Vue terms, each lab will\n      be a page or component that we can navigate to. I won’t write a post for\n      every lab.\n    </p>\n    <p>Each lab contains a Babylon JS scene, a title, and some notes.</p>\n    <p>\n      Check the code for each lap for more details. The repo is\n      <a href=\"https://github.com/vrhermit/Canvatorium\">here</a>\n    </p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Home\",\n  components: {},\n};\n</script>\n\n<style scoped>\n.home {\n  background: #2a323e;\n  padding: 1rem;\n  margin: 1rem;\n  height: calc(100vh - 5rem);\n}\na {\n  color: #3867d6;\n}\n</style>","import { render } from \"./Home.vue?vue&type=template&id=330a9914&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=330a9914&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Repos\\\\Canvatorium\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-330a9914\"]])\n\nexport default __exports__","<template>\r\n  <article class=\"lab-wrapper\">\r\n    <canvas id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    <h2>Lab 000 - Hello Canvatorium</h2>\r\n    <p>Just setting up the shared lab resources. Grid, Lights, Camera, etc.</p>\r\n  </article>\r\n</template>\r\n\r\n<script>\r\nimport Lab000Wrapper from \"../scenes/Lab000Wrapper.js\";\r\n\r\n/*\r\nLab Notes:\r\nThis lab use an interface object to create a BabylonJS scene, based on the workflow that I used during 'A Vue into 3D'\r\n*/\r\nexport default {\r\n  name: \"Lab000\",\r\n\r\n  async mounted() {\r\n    await Lab000Wrapper.createScene(document.getElementById(\"bjsCanvas\"));\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.lab-wrapper {\r\n  overflow-y: auto;\r\n  height: calc(100vh - 1rem);\r\n  margin: 0%;\r\n  padding: 1rem;\r\n}\r\n</style>","import * as BABYLON from \"babylonjs\";\r\n\r\nconst addLabCamera = (canvas, scene) => {\r\n  // Add an ArcRotateCamera to the scene and attach it to the canvas\r\n  // ArcRotateCamera is used to rotate the camera around the scene when not using WebXR\r\n  const camera = new BABYLON.ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 2.5, 3, new BABYLON.Vector3(0, 0, 0), scene);\r\n  camera.wheelDeltaPercentage = 0.01;\r\n  camera.upperBetaLimit = Math.PI / 1.5;\r\n  camera.lowerRadiusLimit = 2;\r\n  camera.upperRadiusLimit = 50;\r\n  camera.setPosition(new BABYLON.Vector3(0, 3.5, -6));\r\n  camera.setTarget(new BABYLON.Vector3(0, 1, 0));\r\n  camera.attachControl(canvas, true);\r\n};\r\nexport default addLabCamera;\r\n","// import { BABYLON.Color3 } from \"@babylonjs/core\";\r\nimport * as BABYLON from \"babylonjs\";\r\n\r\nconst LabColors = {\r\n  purple: new BABYLON.Color3.FromHexString(\"#8854d0\"),\r\n  blue: new BABYLON.Color3.FromHexString(\"#3867d6\"),\r\n  teal: new BABYLON.Color3.FromHexString(\"#2d98da\"),\r\n  cyan: new BABYLON.Color3.FromHexString(\"#0fb9b1\"),\r\n\r\n  green: new BABYLON.Color3.FromHexString(\"#20bf6b\"),\r\n  yellow: new BABYLON.Color3.FromHexString(\"#f7b731\"),\r\n  orange: new BABYLON.Color3.FromHexString(\"#fa8231\"),\r\n  red: new BABYLON.Color3.FromHexString(\"#eb3b5a\"),\r\n\r\n  dark1: new BABYLON.Color3.FromHexString(\"#2a323e\"),\r\n  dark2: new BABYLON.Color3.FromHexString(\"#3e4a5d\"),\r\n  dark3: new BABYLON.Color3.FromHexString(\"#49576c\"),\r\n  dark4: new BABYLON.Color3.FromHexString(\"#53637b\"),\r\n\r\n  light1: new BABYLON.Color3.FromHexString(\"#a5b1c2\"),\r\n  light2: new BABYLON.Color3.FromHexString(\"#b4becc\"),\r\n  light3: new BABYLON.Color3.FromHexString(\"#c3cbd7\"),\r\n  light4: new BABYLON.Color3.FromHexString(\"#d3d9e1\")\r\n};\r\n\r\nexport default LabColors;\r\n","import * as BABYLON from \"babylonjs\";\r\nimport LabColors from \"./LabColors\";\r\n\r\nconst addLabLights = (scene) => {\r\n  // Customize the scene lighting and background color\r\n  const ambientLight1 = new BABYLON.HemisphericLight(\"light-01\", new BABYLON.Vector3(5, 5, 5), scene);\r\n  ambientLight1.intensity = 0.8;\r\n  const ambientLight2 = new BABYLON.HemisphericLight(\"light-02\", new BABYLON.Vector3(-5, 5, -5), scene);\r\n  ambientLight2.intensity = 0.8;\r\n  scene.clearColor = LabColors.dark1;\r\n};\r\nexport default addLabLights;\r\n","import * as BABYLON from \"babylonjs\";\r\nimport * as MAT from \"babylonjs-materials\";\r\nimport LabColors from \"./LabColors\";\r\n\r\nconst addLabRoom = (scene) => {\r\n  // Add a ground plane to the scene. Used for WebXR teleportation\r\n  const ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { height: 20, width: 20, subdivisions: 4 }, scene);\r\n  // ground.position.y = 10;\r\n  ground.sideOrientation = \"DOUBLESIDE\";\r\n  const groundMaterial = new MAT.GridMaterial(\"groundMaterial\", scene);\r\n  groundMaterial.majorUnitFrequency = 5;\r\n  groundMaterial.minorUnitFrequency = 0.1;\r\n  groundMaterial.gridRatio = 1;\r\n  groundMaterial.backFaceCulling = false;\r\n  groundMaterial.mainColor = LabColors.light1;\r\n  groundMaterial.lineColor = new BABYLON.Color3(1.0, 1.0, 1.0);\r\n  groundMaterial.opacity = 0.98;\r\n  ground.material = groundMaterial;\r\n\r\n  const wall1 = BABYLON.MeshBuilder.CreateGround(\"wall1\", { height: 10, width: 20, subdivisions: 4 }, scene);\r\n  wall1.rotation = new BABYLON.Vector3(Math.PI / 2, 0, Math.PI / 2);\r\n  wall1.position = new BABYLON.Vector3(-10, 5, 0);\r\n  wall1.material = groundMaterial;\r\n\r\n  const wall2 = wall1.clone(\"wall2\");\r\n  wall2.rotation = new BABYLON.Vector3(Math.PI / 2, 0, Math.PI / 2);\r\n  wall2.position = new BABYLON.Vector3(10, 5, 0);\r\n\r\n  const wall3 = wall1.clone(\"wall2\");\r\n  wall3.rotation = new BABYLON.Vector3(Math.PI / 2, Math.PI / 2, Math.PI / 2);\r\n  wall3.position = new BABYLON.Vector3(0, 5, -10);\r\n\r\n  const wall4 = wall1.clone(\"wall4\");\r\n  wall4.rotation = new BABYLON.Vector3(Math.PI / 2, Math.PI / 2, Math.PI / 2);\r\n  wall4.position = new BABYLON.Vector3(0, 5, 10);\r\n\r\n  // Return the ground to use for teleportation\r\n  return ground;\r\n};\r\nexport default addLabRoom;\r\n","import * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\n\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst Lab000Wrapper = {\r\n  engine: null,\r\n  scene: null,\r\n\r\n  createScene: async (canvas) => {\r\n    // Create and customize the scene\r\n    const engine = new BABYLON.Engine(canvas);\r\n    const scene = new BABYLON.Scene(engine);\r\n\r\n    // Use the shared lab tools\r\n    addLabCamera(canvas, scene);\r\n    scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 0.8, -4);\r\n    addLabLights(scene);\r\n    const ground = addLabRoom(scene);\r\n\r\n    // Make some boxes to test out the colors in VR\r\n    const group = new BABYLON.Mesh(\"logo-group\");\r\n    group.position = new BABYLON.Vector3(-3.5, 0.5, 0);\r\n\r\n    makeCard();\r\n\r\n    // WebXRDefaultExperience\r\n    const xrDefault = await scene.createDefaultXRExperienceAsync({\r\n      floorMeshes: [ground]\r\n    });\r\n    const xrHelper = xrDefault.baseExperience;\r\n    console.info(\"webxr:\", xrHelper);\r\n\r\n    engine.runRenderLoop(() => {\r\n      scene.render();\r\n    });\r\n  }\r\n\r\n  // --- Call these functions from Vue to pass in the data or setup the scene ---\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\");\r\n  plane.position.y = 1;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = \"Canvatorium\";\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nexport default Lab000Wrapper;\r\n","import { render } from \"./Lab000.vue?vue&type=template&id=bc42271c&scoped=true\"\nimport script from \"./Lab000.vue?vue&type=script&lang=js\"\nexport * from \"./Lab000.vue?vue&type=script&lang=js\"\n\nimport \"./Lab000.vue?vue&type=style&index=0&id=bc42271c&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Repos\\\\Canvatorium\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bc42271c\"]])\n\nexport default __exports__","<template>\r\n  <article class=\"lab-wrapper\">\r\n    <slot name=\"scene\">No Scene</slot>\r\n    <h2>{{ this.$route?.meta?.title }} - {{ this.$route?.meta?.subtitle }}</h2>\r\n    <div v-html=\"unmarkedLabNotes\"></div>\r\n  </article>\r\n</template>\r\n\r\n<script>\r\nimport { marked } from \"marked\";\r\n\r\nexport default {\r\n  props: {\r\n    labNotes: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  computed: {\r\n    unmarkedLabNotes() {\r\n      return marked.parse(this.labNotes);\r\n    },\r\n  },\r\n  mounted() {\r\n    console.log(\r\n      `Welcome to ${this.$route?.meta?.title} - ${this.$route?.meta?.subtitle}`\r\n    );\r\n    console.log(this.labNotes);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.lab-wrapper {\r\n  overflow-y: auto;\r\n  height: calc(100vh - 1rem);\r\n  margin: 0%;\r\n  padding: 1rem;\r\n}\r\n</style>","import { render } from \"./LabLayout.vue?vue&type=template&id=3bca8c2a\"\nimport script from \"./LabLayout.vue?vue&type=script&lang=js\"\nexport * from \"./LabLayout.vue?vue&type=script&lang=js\"\n\nimport \"./LabLayout.vue?vue&type=style&index=0&id=3bca8c2a&lang=css\"\n\nimport exportComponent from \"C:\\\\Repos\\\\Canvatorium\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nThis lab uses Vue 3 script setup. It replaces the interface object by combining it with the vue component for the lab.\r\nI picked out some colors to use throughout the labs in the future.\r\nI created a box for each color and used the standard BabylonJS material.\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  const engine = new BABYLON.Engine(canvas);\r\n  const scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Make some boxes to test out the colors in VR\r\n  const group = new BABYLON.Mesh(\"color-group\");\r\n  group.position = new BABYLON.Vector3(-3.5, 0.5, 0);\r\n\r\n  makeBox(\"purple\", group, scene).position = new BABYLON.Vector3(0, 0, 0);\r\n  makeBox(\"blue\", group, scene).position = new BABYLON.Vector3(1, 0, 0);\r\n  makeBox(\"teal\", group, scene).position = new BABYLON.Vector3(2, 0, 0);\r\n  makeBox(\"cyan\", group, scene).position = new BABYLON.Vector3(3, 0, 0);\r\n\r\n  makeBox(\"green\", group, scene).position = new BABYLON.Vector3(4, 0, 0);\r\n  makeBox(\"yellow\", group, scene).position = new BABYLON.Vector3(5, 0, 0);\r\n  makeBox(\"orange\", group, scene).position = new BABYLON.Vector3(6, 0, 0);\r\n  makeBox(\"red\", group, scene).position = new BABYLON.Vector3(7, 0, 0);\r\n\r\n  makeBox(\"dark1\", group, scene).position = new BABYLON.Vector3(0, 1, 0);\r\n  makeBox(\"dark2\", group, scene).position = new BABYLON.Vector3(1, 1, 0);\r\n  makeBox(\"dark3\", group, scene).position = new BABYLON.Vector3(2, 1, 0);\r\n  makeBox(\"dark4\", group, scene).position = new BABYLON.Vector3(3, 1, 0);\r\n\r\n  makeBox(\"light1\", group, scene).position = new BABYLON.Vector3(4, 1, 0);\r\n  makeBox(\"light2\", group, scene).position = new BABYLON.Vector3(5, 1, 0);\r\n  makeBox(\"light3\", group, scene).position = new BABYLON.Vector3(6, 1, 0);\r\n  makeBox(\"light4\", group, scene).position = new BABYLON.Vector3(7, 1, 0);\r\n\r\n  // WebXRDefaultExperience\r\n  const xrDefault = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n  const xrHelper = xrDefault.baseExperience;\r\n  console.info(\"webxr:\", xrHelper);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeBox = (colorName, parent, scene) => {\r\n  // Create a colored box from using a string to get the color from the Brand object\r\n  const mat = new BABYLON.StandardMaterial(`${colorName}-material`, scene);\r\n  mat.diffuseColor = LabColors[colorName];\r\n  mat.specularColor = new BABYLON.Color3(0.1, 0.1, 0.1);\r\n  const mesh = BABYLON.MeshBuilder.CreateBox(\r\n    `${colorName}-box`,\r\n    { size: 1 },\r\n    scene\r\n  );\r\n  mesh.material = mat;\r\n  mesh.parent = parent;\r\n\r\n  return mesh;\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab001.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab001.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nExpanding on the script setup idea from lab 2.\r\n- Added some reactive references to some data (count and sample)\r\n- Explores watch() and watchEffect() with refs\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nconst sample = ref(\"default\");\r\nconst count = ref(0);\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  makeButton();\r\n  makeCard();\r\n\r\n  // WebXRDefaultExperience\r\n  const xrDefault = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n  const xrHelper = xrDefault.baseExperience;\r\n  console.info(\"webxr:\", xrHelper);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\", {}, scene);\r\n  plane.position.y = 2;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = \"Watch\";\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nconst makeButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"reset\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position.y = 1;\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"Change Values\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 24;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    count.value++;\r\n    sample.value = \"Modified\";\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n\r\n// Watch with a single value\r\nwatch(count, (newValue, oldValue) => {\r\n  const texture = scene.getTextureByName(\"card-texture\");\r\n  texture.getControlByName(\"card-text\").text =\r\n    \"From \" + oldValue + \" to \" + newValue;\r\n});\r\n\r\n// // Watch with multiple values\r\n// watch([sample, count], (newValues, prevValues) => {\r\n//   const texture = scene.getTextureByName(\"card-texture\");\r\n//   const [oldText, oldNum] = prevValues;\r\n//   const [text, num] = newValues;\r\n//   texture.getControlByName(\"card-text\").text =\r\n//     oldText + \" > \" + text + \"; \" + oldNum + \" > \" + num;\r\n// });\r\n\r\n// watchEffect watches any changes to reactive data using the effect hook\r\n// watchEffect(\r\n//   () => {\r\n//     if (scene) {\r\n//       const texture = scene.getTextureByName(\"card-texture\");\r\n//       texture.getControlByName(\"card-text\").text =\r\n//         sample.value + \" \" + count.value;\r\n//     }\r\n//     console.log(\"watching\", sample.value + \" \" + count.value, scene);\r\n//   }\r\n// );\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab002.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab002.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nContinuing from lab 2 with reactive data\r\n- Explore the xr object with async/await\r\n- Print a message when the visitor enters immersive mode\r\n- Reposition the camera when the user enters immersive mode\r\n- Add some button events to the trigger, these update the count value --/++\r\n`;\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nconst count = ref(0);\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  console.log(ground);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  makeAddButton();\r\n  makeSubButton();\r\n  makeCard();\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Create the default experience\r\n  let xr = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n\r\n  // Perform actions when entering immersiveXR mode\r\n  xr.baseExperience.sessionManager.onXRSessionInit.add((session) => {\r\n    console.log(\"XR Session Init\", session);\r\n    const texture = scene.getTextureByName(\"card-texture\");\r\n    texture.getControlByName(\"card-text\").text = \"Welcome to Lab 003\";\r\n  });\r\n\r\n  // Move the player when thet enter immersive mode\r\n  xr.baseExperience.onInitialXRPoseSetObservable.add((xrCamera) => {\r\n    console.log(\"XR Camera\", xrCamera);\r\n    xrCamera.position.z = -2;\r\n  });\r\n\r\n  // Playing with control input\r\n  console.log(\"input\", xr.input);\r\n\r\n  //controller input\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      if (motionController.handness === \"left\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            count.value--;\r\n          }\r\n        });\r\n      }\r\n      if (motionController.handness === \"right\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            count.value++;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\", {}, scene);\r\n  plane.position.y = 2;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = \"{message}\";\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nconst makeAddButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"button-add\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position = new BABYLON.Vector3(0.3, 1, 0);\r\n  button.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"count++\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 64;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    count.value++;\r\n  });\r\n};\r\n\r\nconst makeSubButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"button-sub\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position = new BABYLON.Vector3(-0.3, 1, 0);\r\n  button.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"count--\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 64;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    count.value--;\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n\r\n// Watch with a single value\r\nwatch(count, (newValue, oldValue) => {\r\n  const texture = scene.getTextureByName(\"card-texture\");\r\n  texture.getControlByName(\"card-text\").text =\r\n    \"From \" + oldValue + \" to \" + newValue;\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab003.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab003.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nContinuing from lab 3 with controller input and buttons\r\n- Explore the xr object with async/await\r\n- Print a message when the visitor enters immersive mode\r\n- Reposition the camera when the user enters immersive mode\r\n- Added controller button logging to a message value. Adapted from this playground: https://playground.babylonjs.com/#28EKWI#37\r\n- Tested with Oculus Quest 2 Controllers\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nconst count = ref(0);\r\nconst message = ref(\"message value\");\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  console.log(ground);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  makeAddButton();\r\n  makeSubButton();\r\n  makeCard();\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Create the default experience\r\n  let xr = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n\r\n  // Perform actions when entering immersiveXR mode\r\n  xr.baseExperience.sessionManager.onXRSessionInit.add((session) => {\r\n    console.log(\"XR Session Init\", session);\r\n    const texture = scene.getTextureByName(\"card-texture\");\r\n    texture.getControlByName(\"card-text\").text = \"Welcome to Lab 003\";\r\n  });\r\n\r\n  // Move the player when thet enter immersive mode\r\n  xr.baseExperience.onInitialXRPoseSetObservable.add((xrCamera) => {\r\n    console.log(\"XR Camera\", xrCamera);\r\n    xrCamera.position.z = -2;\r\n  });\r\n\r\n  // Playing with control input\r\n  console.log(\"input\", xr.input);\r\n\r\n  //controller input\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      if (motionController.handness === \"left\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            message.value = \"Left Trigger Pressed\";\r\n          }\r\n        });\r\n        let squeezeComponent = motionController.getComponent(xr_ids[1]); //xr-standard-squeeze\r\n        squeezeComponent.onButtonStateChangedObservable.add(() => {\r\n          if (squeezeComponent.pressed) {\r\n            message.value = \"Left Grip Pressed\";\r\n          }\r\n        });\r\n        let thumbstickComponent = motionController.getComponent(xr_ids[2]); //xr-standard-thumbstick\r\n        thumbstickComponent.onButtonStateChangedObservable.add(() => {\r\n          if (thumbstickComponent.pressed) {\r\n            message.value = \"Left Thumbstick Pressed\";\r\n          }\r\n        });\r\n        thumbstickComponent.onAxisValueChangedObservable.add((axes) => {\r\n          message.value = \"Left Axises: \" + axes.x + \" \" + axes.y;\r\n          console.log(\"axes\", axes);\r\n        });\r\n\r\n        let abuttonComponent = motionController.getComponent(xr_ids[3]); //x-button\r\n        abuttonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (abuttonComponent.pressed) {\r\n            message.value = \"X Button Pressed\";\r\n          }\r\n        });\r\n        let bbuttonComponent = motionController.getComponent(xr_ids[4]); //y-button\r\n        bbuttonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (bbuttonComponent.pressed) {\r\n            message.value = \"Y Button Pressed\";\r\n          }\r\n        });\r\n      }\r\n\r\n      // END LEFT CONTROLLER ------------------------------------------------------------\r\n\r\n      if (motionController.handness === \"right\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            message.value = \"Right Trigger Pressed\";\r\n          }\r\n        });\r\n        let squeezeComponent = motionController.getComponent(xr_ids[1]); //xr-standard-squeeze\r\n        squeezeComponent.onButtonStateChangedObservable.add(() => {\r\n          if (squeezeComponent.pressed) {\r\n            message.value = \"Right Grip Pressed\";\r\n          }\r\n        });\r\n        let thumbstickComponent = motionController.getComponent(xr_ids[2]); //xr-standard-thumbstick\r\n        thumbstickComponent.onButtonStateChangedObservable.add(() => {\r\n          if (thumbstickComponent.pressed) {\r\n            message.value = \"Right Thumbstick Pressed\";\r\n          }\r\n        });\r\n        thumbstickComponent.onAxisValueChangedObservable.add((axes) => {\r\n          message.value = \"Right Axises: \" + axes.x + \" \" + axes.y;\r\n          console.log(\"axes\", axes);\r\n        });\r\n\r\n        let abuttonComponent = motionController.getComponent(xr_ids[3]); //a-button\r\n        abuttonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (abuttonComponent.pressed) {\r\n            message.value = \"A Button Pressed\";\r\n          }\r\n        });\r\n        let bbuttonComponent = motionController.getComponent(xr_ids[4]); //b-button\r\n        bbuttonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (bbuttonComponent.pressed) {\r\n            message.value = \"B Button Pressed\";\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\", {}, scene);\r\n  plane.position.y = 2;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = message.value;\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nconst makeAddButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"button-add\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position = new BABYLON.Vector3(0.3, 1, 0);\r\n  button.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"count++\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 64;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    count.value++;\r\n    message.value = \"count: \" + count.value;\r\n  });\r\n};\r\n\r\nconst makeSubButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"button-sub\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position = new BABYLON.Vector3(-0.3, 1, 0);\r\n  button.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"count--\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 48;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    count.value--;\r\n    message.value = \"count: \" + count.value;\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n\r\n// Watch with a single value\r\nwatch(message, (newValue, oldValue) => {\r\n  console.log(oldValue, newValue);\r\n  const texture = scene.getTextureByName(\"card-texture\");\r\n  texture.getControlByName(\"card-text\").text = newValue;\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab004.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab004.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nRouter Nav to Lab 006 (not working). \r\nTesting cross-scene navigation with Router and Window.location.\r\n- I'm not sure if the issue is in Vue Router or on Babylon JS.\r\n- Placing this idea on hold for now.\r\n- While Router may not work, I can brute force my way to other scenes with \\`window.location.assign(\"/lab006\")\\`\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst bjsCanvas = ref(null);\r\nconst router = useRouter();\r\n\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  makeButton();\r\n  makeCard();\r\n\r\n  // WebXRDefaultExperience\r\n  const xrDefault = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n  const xrHelper = xrDefault.baseExperience;\r\n  console.info(\"webxr:\", xrHelper);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\", {}, scene);\r\n  plane.position.y = 2;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = \"Lab 005\";\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nconst makeButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"reset\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position.y = 1;\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"Go to Lab 006\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 24;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    console.log(\"button clicked\");\r\n    // This does not work\r\n    router.push({\r\n      name: \"Lab006\",\r\n    });\r\n    // This does work\r\n    // window.location.assign(\"/lab006\");\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab005.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab005.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nTesting cross-scene navigaiton with Router and Window.location\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nconst router = useRouter();\r\n\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  makeButton();\r\n  makeCard();\r\n\r\n  // WebXRDefaultExperience\r\n  const xrDefault = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n  const xrHelper = xrDefault.baseExperience;\r\n  console.info(\"webxr:\", xrHelper);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nconst makeCard = () => {\r\n  // GUI\r\n  var plane = BABYLON.MeshBuilder.CreatePlane(\"plane\", {}, scene);\r\n  plane.position.y = 2;\r\n\r\n  var advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane);\r\n  advancedTexture.name = \"card-texture\";\r\n\r\n  var cardText = new GUI.TextBlock(\"card-text\");\r\n  cardText.text = \"Lab 006\";\r\n  cardText.color = \"white\";\r\n  cardText.fontSize = 64;\r\n\r\n  advancedTexture.addControl(cardText);\r\n  plane.scaling = new BABYLON.Vector3(5, 5, 5);\r\n};\r\n\r\nconst makeButton = () => {\r\n  // Let's add a button\r\n  var button = new GUI.Button3D(\"reset\");\r\n  manager.addControl(button);\r\n  button.linkToTransformNode(anchor);\r\n  button.position.y = 1;\r\n\r\n  var text1 = new GUI.TextBlock();\r\n  text1.text = \"Go to Lab 005\";\r\n  text1.color = \"white\";\r\n  text1.fontSize = 24;\r\n  button.content = text1;\r\n\r\n  button.onPointerUpObservable.add(() => {\r\n    console.log(\"button clicked\");\r\n    // This does not work\r\n    router.push({\r\n      name: \"Lab005\",\r\n    });\r\n    // This does work\r\n    // window.location.assign(\"/lab005\");\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab006.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab006.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","/*\r\nThis tool started as a proof of concept for during Lab 007 and was refactored into this file.\r\nLots to do before this is a robust tool: https://github.com/vrhermit/Canvatorium/issues/10\r\n*/\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, reactive, watch } from \"@vue/runtime-core\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nexport const createLabConsole = (scene) => {\r\n  // The data that we will display in the VR console\r\n  let conLogData = reactive([]);\r\n  let consoleIsVisible = ref(false);\r\n\r\n  // A reference to the BJS GUI Scroll Viewer, too lazy to query this in the graph...\r\n  let scrollViewer;\r\n\r\n  // A reference to the BJS GUI TextBlock, too lazy to query this in the graph...\r\n  let loggerText;\r\n\r\n  // Adapted from https://ourcodeworld.com/articles/read/104/how-to-override-the-console-methods-in-javascript\r\n  const overrideConsole = () => {\r\n    // Save the original method in a private variable\r\n    let _privateLog = console.log;\r\n    // Redefine console.log method with a custom function\r\n    console.log = function (message) {\r\n      conLogData.push(message.toString());\r\n      _privateLog.apply(console, arguments);\r\n    };\r\n  };\r\n  overrideConsole();\r\n\r\n  // GUI\r\n  const grabMaterial = new BABYLON.StandardMaterial(\"card-material\", scene);\r\n  grabMaterial.diffuseColor = LabColors[\"purple\"];\r\n  grabMaterial.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab = BABYLON.MeshBuilder.CreateBox(\"detail-card\", {\r\n    height: 0.05,\r\n    width: 0.4,\r\n    depth: 0.05\r\n  });\r\n  grab.material = grabMaterial;\r\n  grab.position = new BABYLON.Vector3(0, 1, 0);\r\n  // var boundingBox = BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(grab);\r\n  // boundingBox.ignoreChildren = true;\r\n  const sixDofDragBehavior = new BABYLON.SixDofDragBehavior();\r\n  // sixDofDragBehavior.allowMultiPointers = true;\r\n  grab.addBehavior(sixDofDragBehavior);\r\n\r\n  const card = BABYLON.MeshBuilder.CreateBox(\"detail-card\", {\r\n    height: 2.1,\r\n    width: 3.1,\r\n    depth: 0.2\r\n  });\r\n  // card.parent = grab;\r\n  grab.addChild(card);\r\n  // card.position = new BABYLON.Vector3(-1, 1, 1);\r\n  card.position = new BABYLON.Vector3(0, 0.6, 0);\r\n  card.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n  const cardMaterial = new BABYLON.StandardMaterial(\"card-material\", scene);\r\n  cardMaterial.diffuseColor = LabColors[\"light1\"];\r\n  cardMaterial.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  card.material = cardMaterial;\r\n\r\n  const plane = BABYLON.MeshBuilder.CreatePlane(\"detail-plane\", { height: 2, width: 3 }, scene);\r\n  plane.position.z = -0.11;\r\n  plane.parent = card;\r\n\r\n  grab.isVisible = consoleIsVisible.value;\r\n  card.isVisible = consoleIsVisible.value;\r\n  plane.isVisible = consoleIsVisible.value;\r\n\r\n  const advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane, 3 * 1024, 2 * 1024);\r\n  advancedTexture.name = \"logger-texture\";\r\n\r\n  var panel = new GUI.StackPanel();\r\n  advancedTexture.addControl(panel);\r\n\r\n  var sv = new GUI.ScrollViewer(\"logger-scroll\");\r\n  scrollViewer = sv;\r\n  sv.thickness = 48;\r\n  sv.color = \"#3e4a5d\";\r\n  sv.background = \"#3e4a5d\";\r\n  sv.opacity = 1;\r\n  sv.width = `${3 * 1024}px`;\r\n  sv.height = `${2 * 1024 - 128}px`;\r\n  sv.barSize = 60;\r\n  sv.barColor = \"#53637b\";\r\n  sv.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n\r\n  panel.addControl(sv);\r\n\r\n  var tb = new GUI.TextBlock(\"logger-text\");\r\n  loggerText = tb;\r\n  tb.textWrapping = true;\r\n\r\n  tb.width = 1;\r\n  tb.height = 3;\r\n  tb.paddingTop = \"1%\";\r\n  tb.paddingLeft = \"30px\";\r\n  tb.paddingRight = \"20px\";\r\n  tb.paddingBottom = \"1%\";\r\n  tb.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.textVerticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.color = \"#d3d9e1\";\r\n  tb.fontSize = \"96px\";\r\n\r\n  sv.addControl(tb);\r\n\r\n  var clearButton = GUI.Button.CreateSimpleButton(\"clear-button\", \"clear\");\r\n  clearButton.width = \"256px\";\r\n  clearButton.height = \"128px\";\r\n  clearButton.color = \"white\";\r\n  clearButton.background = \"#eb3b5a\";\r\n  clearButton.fontSize = \"96px\";\r\n  clearButton.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n  clearButton.onPointerClickObservable.add(() => {\r\n    conLogData.splice(0, conLogData.length);\r\n    console.log(\"console cleared\");\r\n  });\r\n  panel.addControl(clearButton);\r\n\r\n  const setConsoleTransform = (position, rotateTo, scaling) => {\r\n    grab.position = position;\r\n    grab.lookAt(rotateTo, Math.PI, 0, 0);\r\n    grab.scaling = scaling;\r\n  };\r\n\r\n  const toggleConsole = (xrController) => {\r\n    consoleIsVisible.value = !consoleIsVisible.value;\r\n\r\n    if (xrController.grip && consoleIsVisible.value) {\r\n      // Create an empty ray\r\n      const tmpRay = new BABYLON.Ray(new BABYLON.Vector3(), new BABYLON.Vector3(), Infinity);\r\n\r\n      // Update the ray to use the controller's position and forward\r\n      xrController.getWorldPointerRayToRef(tmpRay, true);\r\n\r\n      // Calculate a position in front of the controller\r\n      const newPosition = new BABYLON.Vector3(tmpRay.origin.x + tmpRay.direction.x, tmpRay.origin.y, tmpRay.origin.z + tmpRay.direction.z);\r\n\r\n      // Use the current position of the controller as a vector to use with lookAt()\r\n      const newRotation = new BABYLON.Vector3(tmpRay.origin.x, tmpRay.origin.y, tmpRay.origin.z);\r\n\r\n      const newScale = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n      setConsoleTransform(\r\n        // Repacking these so I don't end up with a reference to the controller\r\n        newPosition,\r\n        newRotation,\r\n        newScale\r\n      );\r\n    }\r\n  };\r\n\r\n  // Watch the labLog data and update the text in the GUI\r\n  // TODO: Refactor this to append only the new eleements to the text block\r\n  watch(conLogData, (newValue) => {\r\n    const logData = [...newValue];\r\n    if (scrollViewer && loggerText) {\r\n      loggerText.text = logData.join(\"\\n\");\r\n      loggerText.resizeToFit = true;\r\n      scrollViewer.verticalBar.value = 1;\r\n    }\r\n  });\r\n\r\n  watch(consoleIsVisible, (newValue) => {\r\n    grab.isVisible = newValue;\r\n    card.isVisible = newValue;\r\n    plane.isVisible = newValue;\r\n  });\r\n\r\n  return { toggleConsole };\r\n};\r\n","<script setup>\r\nconst labNotes = `\r\nExplore the idea of overriding console.log() so I can view the log in VR\r\n- This is just a proof-of-concept, not a full-fledged solution\r\n- Override console.log() and stash the message in a reactive variable\r\n- watch the variable and display the message in VR by updating the text in a scroll view\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\n\r\nimport \"babylonjs-loaders\";\r\nimport { ref, reactive, watch, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\nimport { createLabConsole } from \"../lab-shared/LabConsole\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nlet conLogData = reactive([]);\r\n\r\n// A reference to the BJS GUI Scroll Viewer, too lazy to query this in the graph...\r\nlet scrollViewer;\r\n\r\n// A reference to the BJS GUI TextBlock, too lazy to query this in the graph...\r\nlet loggerText;\r\n\r\n// Adapted from https://ourcodeworld.com/articles/read/104/how-to-override-the-console-methods-in-javascript\r\nconst overrideConsole = () => {\r\n  // Save the original method in a private variable\r\n  let _privateLog = console.log;\r\n  // Redefine console.log method with a custom function\r\n  console.log = function (message) {\r\n    conLogData.push(message.toString());\r\n    _privateLog.apply(console, arguments);\r\n  };\r\n};\r\noverrideConsole();\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 1, -2);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  const { toggleConsole } = createLabConsole(scene);\r\n\r\n  // GUI\r\n\r\n  const card = BABYLON.MeshBuilder.CreateBox(\"console-card\", {\r\n    height: 2.1,\r\n    width: 3.1,\r\n    depth: 0.2,\r\n  });\r\n  // card.position = new BABYLON.Vector3(-1, 1, 1);\r\n  card.position = new BABYLON.Vector3(0, 1, 0);\r\n  card.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n  const cardMaterial = new BABYLON.StandardMaterial(\"card-material\", scene);\r\n  cardMaterial.diffuseColor = LabColors[\"light1\"];\r\n  cardMaterial.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  card.material = cardMaterial;\r\n\r\n  const plane = BABYLON.MeshBuilder.CreatePlane(\r\n    \"console-plane\",\r\n    { height: 2, width: 3 },\r\n    scene\r\n  );\r\n  plane.position.z = -0.11;\r\n  plane.parent = card;\r\n\r\n  const advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(\r\n    plane,\r\n    3 * 1024,\r\n    2 * 1024\r\n  );\r\n  advancedTexture.name = \"logger-texture\";\r\n\r\n  var panel = new GUI.StackPanel();\r\n  advancedTexture.addControl(panel);\r\n\r\n  var sv = new GUI.ScrollViewer(\"logger-scroll\");\r\n  scrollViewer = sv;\r\n  sv.thickness = 48;\r\n  sv.color = \"#3e4a5d\";\r\n  sv.background = \"#3e4a5d\";\r\n  sv.opacity = 1;\r\n  sv.width = `${3 * 1024}px`;\r\n  sv.height = `${2 * 1024 - 128}px`;\r\n  sv.barSize = 60;\r\n  sv.barColor = \"#53637b\";\r\n  sv.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n\r\n  panel.addControl(sv);\r\n\r\n  var tb = new GUI.TextBlock(\"logger-text\");\r\n  loggerText = tb;\r\n  tb.textWrapping = true;\r\n\r\n  tb.width = 1;\r\n  tb.height = 3;\r\n  tb.paddingTop = \"1%\";\r\n  tb.paddingLeft = \"30px\";\r\n  tb.paddingRight = \"20px\";\r\n  tb.paddingBottom = \"1%\";\r\n  tb.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.textVerticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.color = \"#d3d9e1\";\r\n  tb.fontSize = \"96px\";\r\n\r\n  sv.addControl(tb);\r\n\r\n  console.log(\"WebXR Console Logging in Babylon JS\");\r\n  console.log(\r\n    \"This concept was turned into a reusable tool. You can find it in `src/lab-shared/LabConsole.js`\"\r\n  );\r\n  console.log(\r\n    \"This lab also imported the shared LabConsole. Toggle it on with the Y button\"\r\n  );\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Create the default experience\r\n  let xr = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n\r\n  // let vrCamera;\r\n  // Move the player when thet enter immersive mode\r\n  xr.baseExperience.onInitialXRPoseSetObservable.add((xrCamera) => {\r\n    xrCamera.position.z = -2;\r\n  });\r\n\r\n  //controller input\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      if (motionController.handness === \"left\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let yButtonComponent = motionController.getComponent(xr_ids[4]); //y-button\r\n        yButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (yButtonComponent.pressed) {\r\n            toggleConsole(controller);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\n// Watch the labLog data and update the text in the GUI\r\n// TODO: Refactor this to append only the new eleements to the text block\r\nwatch(conLogData, (newValue) => {\r\n  const logData = [...newValue];\r\n  if (scrollViewer && loggerText) {\r\n    loggerText.text = logData.join(\"\\n\");\r\n    loggerText.resizeToFit = true;\r\n    scrollViewer.verticalBar.value = 1;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab007.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab007.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","/*\r\nThis is a shared component used across labs.\r\nCurrent features\r\n- WebXR default experience\r\n- Teleport system\r\n- Console log common WebXR buttons\r\n- Imports and uses LabConsole for debugging in VR\r\n*/\r\n\r\n// import * as BABYLON from \"babylonjs\";\r\n// import { ref, reactive, watch } from \"@vue/runtime-core\");\r\nimport { createLabConsole } from \"../lab-shared/LabConsole\";\r\n\r\nexport const createLabPlayer = async (scene, teleportMeshes) => {\r\n  const { toggleConsole } = createLabConsole(scene);\r\n  // Create the default experience\r\n  let xr = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: teleportMeshes\r\n  });\r\n\r\n  // let vrCamera;\r\n  // Move the player when thet enter immersive mode\r\n  xr.baseExperience.onInitialXRPoseSetObservable.add((xrCamera) => {\r\n    xrCamera.position.z = -2;\r\n  });\r\n\r\n  //controller input\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      if (motionController.handness === \"left\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            console.log(\"Left Trigger Pressed\");\r\n          }\r\n        });\r\n        let squeezeComponent = motionController.getComponent(xr_ids[1]); //xr-standard-squeeze\r\n        squeezeComponent.onButtonStateChangedObservable.add(() => {\r\n          if (squeezeComponent.pressed) {\r\n            console.log(\"Left Grip Pressed\");\r\n          }\r\n        });\r\n        let thumbstickComponent = motionController.getComponent(xr_ids[2]); //xr-standard-thumbstick\r\n        thumbstickComponent.onButtonStateChangedObservable.add(() => {\r\n          if (thumbstickComponent.pressed) {\r\n            console.log(\"Left Thumbstick Pressed\");\r\n          }\r\n        });\r\n        // thumbstickComponent.onAxisValueChangedObservable.add((axes) => {\r\n        //   console.log(\"Left Axises: \" + axes.x + \" \" + axes.y);\r\n        // });\r\n\r\n        let xButtonComponent = motionController.getComponent(xr_ids[3]); //x-button\r\n        xButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (xButtonComponent.pressed) {\r\n            console.log(\"X Button Pressed\");\r\n          }\r\n        });\r\n        let yButtonComponent = motionController.getComponent(xr_ids[4]); //y-button\r\n        yButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (yButtonComponent.pressed) {\r\n            console.log(\"Y Button Pressed\");\r\n            toggleConsole(controller);\r\n          }\r\n        });\r\n      }\r\n\r\n      // END LEFT CONTROLLER ------------------------------------------------------------\r\n\r\n      if (motionController.handness === \"right\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let triggerComponent = motionController.getComponent(xr_ids[0]); //xr-standard-trigger\r\n        triggerComponent.onButtonStateChangedObservable.add(() => {\r\n          if (triggerComponent.pressed) {\r\n            console.log(\"Right Trigger Pressed\");\r\n          }\r\n        });\r\n        let squeezeComponent = motionController.getComponent(xr_ids[1]); //xr-standard-squeeze\r\n        squeezeComponent.onButtonStateChangedObservable.add(() => {\r\n          if (squeezeComponent.pressed) {\r\n            console.log(\"Right Grip Pressed\");\r\n          }\r\n        });\r\n        let thumbstickComponent = motionController.getComponent(xr_ids[2]); //xr-standard-thumbstick\r\n        thumbstickComponent.onButtonStateChangedObservable.add(() => {\r\n          if (thumbstickComponent.pressed) {\r\n            console.log(\"Right Thumbstick Pressed\");\r\n          }\r\n        });\r\n        // thumbstickComponent.onAxisValueChangedObservable.add((axes) => {\r\n        //   console.log(\"Right Axises: \" + axes.x + \" \" + axes.y);\r\n        // });\r\n\r\n        let aButtonComponent = motionController.getComponent(xr_ids[3]); //a-button\r\n        aButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (aButtonComponent.pressed) {\r\n            console.log(\"A Button Pressed\");\r\n          }\r\n        });\r\n        let bButtonComponent = motionController.getComponent(xr_ids[4]); //b-button\r\n        bButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (bButtonComponent.pressed) {\r\n            console.log(\"B Button Pressed\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  return { xr };\r\n\r\n  // END WebXR --------------------------------------------------\r\n};\r\n","<script setup>\r\nconst labNotes = `\r\nExplore the new Near Menu in Babylon JS 5.0\r\n- Based on the Holohraphic Menu with limited customizations\r\n- Using manage.controlScaling to scale the menu\r\n- Using some properties on the follow behavior to adjust the relative position\r\n- Bug: [Near Menu Dragging does not work in WebXR on Quest 2](https://forum.babylonjs.com/t/near-menu-dragging-does-not-work-in-oculus-quest-2/27152)\r\n- Bug: [Scaling the controls does not update the scale of mouseover effects](https://forum.babylonjs.com/t/3d-gui-manage-control-scaling-does-not-scale-the-mouse-over-effects-on-holograph-ui/27150)\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 2, -3);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  console.log(\"3D GUI:\", manager, anchor);\r\n\r\n  var near = new GUI.NearMenu(\"near\");\r\n  manager.addControl(near);\r\n  manager.controlScaling = 0.25;\r\n\r\n  var button0 = new GUI.TouchHolographicButton(\"button0\");\r\n  button0.text = \"Button 0\";\r\n  button0.onPointerClickObservable.add(() => {\r\n    console.log(\"Button 0 clicked\");\r\n  });\r\n  near.addButton(button0);\r\n\r\n  var button1 = new GUI.TouchHolographicButton(\"button1\");\r\n  button1.text = \"Button 1\";\r\n  button1.onPointerClickObservable.add(() => {\r\n    console.log(\"Button 1 clicked\");\r\n  });\r\n\r\n  near.addButton(button1);\r\n\r\n  var button2 = new GUI.TouchHolographicButton(\"button2\");\r\n  button2.text = \"Button 2\";\r\n  button2.onPointerClickObservable.add(() => {\r\n    console.log(\"Button 2 clicked\");\r\n  });\r\n  near.addButton(button2);\r\n\r\n  console.log(\"Near Menu:\", near);\r\n  near.defaultBehavior.followBehavior.defaultDistance = 1;\r\n  near.defaultBehavior.followBehavior.minimumDistance = 1;\r\n  near.defaultBehavior.followBehavior.maximumDistance = 2;\r\n  near.defaultBehavior.followBehavior.pitchOffset = -35;\r\n  console.log(\"Near \", near.mesh);\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n\r\n  // Use the LabPlayer\r\n  createLabPlayer(scene, [ground]);\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab008.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab008.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, watch } from \"@vue/runtime-core\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nconst createTitleCard = (scene) => {\r\n  // The data that we will display in the VR console\r\n  let title = ref(\"TITLE PLACEHOLDER\");\r\n  let subtitle = ref(\"SUBTITLE PLACEHOLDER\");\r\n\r\n  const card = BABYLON.MeshBuilder.CreateBox(\"detail-card\", {\r\n    height: 1,\r\n    width: 1.6,\r\n    depth: 0.2\r\n  });\r\n  card.position = new BABYLON.Vector3(0, 1.5, 0);\r\n  card.scaling = new BABYLON.Vector3(0.8, 0.8, 0.8);\r\n\r\n  const cardMaterial = new BABYLON.StandardMaterial(\"card-material\", scene);\r\n  cardMaterial.diffuseColor = LabColors[\"dark3\"];\r\n  cardMaterial.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  card.material = cardMaterial;\r\n\r\n  const plane = BABYLON.MeshBuilder.CreatePlane(\"detail-plane\", { height: 1, width: 1.6 }, scene);\r\n  plane.position.z = -0.11;\r\n  plane.parent = card;\r\n\r\n  const advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(plane, 1.6 * 1024, 1 * 1024);\r\n  advancedTexture.name = \"title-card-texture\";\r\n\r\n  const titleTextBlock = new GUI.TextBlock(\"title-text\");\r\n  titleTextBlock.text = title.value;\r\n  titleTextBlock.textWrapping = true;\r\n  titleTextBlock.height = 0.5;\r\n  titleTextBlock.top = -244;\r\n  titleTextBlock.color = \"#d3d9e1\";\r\n  titleTextBlock.fontSize = \"124px\";\r\n  titleTextBlock.fontStyle = \"bold\";\r\n  advancedTexture.addControl(titleTextBlock);\r\n\r\n  const subtitleTextBlock = new GUI.TextBlock(\"subtitle-text\");\r\n  subtitleTextBlock.text = subtitle.value;\r\n  subtitleTextBlock.textWrapping = true;\r\n  subtitleTextBlock.height = 0.5;\r\n  subtitleTextBlock.color = \"#d3d9e1\";\r\n  subtitleTextBlock.fontSize = \"96px\";\r\n  subtitleTextBlock.fontStyle = \"bold\";\r\n  advancedTexture.addControl(subtitleTextBlock);\r\n\r\n  // Watch the title and subtitle for changes\r\n  // and update the text in the GUI\r\n  watch(title, (newValue) => {\r\n    const texture = scene.getTextureByName(\"title-card-texture\");\r\n    texture.getControlByName(\"title-text\").text = newValue;\r\n  });\r\n\r\n  watch(subtitle, (newValue) => {\r\n    const texture = scene.getTextureByName(\"title-card-texture\");\r\n    texture.getControlByName(\"subtitle-text\").text = newValue;\r\n  });\r\n\r\n  return { title, subtitle };\r\n};\r\n\r\nexport default createTitleCard;\r\n","<script setup>\r\nconst labNotes = `\r\nPlaying with Vue 3 composables as a way of updating BabylonJS objects\r\n- Created a folder called \\`composables\\`\r\n- New composable called \\`TitleCard\\`\r\n- Titlecard exports a function called \\`createCreateTitle\\`, which returns two reactive refs as an object\r\n- The scene destructures this object and uses the refs to update the title card\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\n\r\nimport createTitleCard from \"../composables/TitleCard\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\nlet manager;\r\nlet anchor;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 2, -3);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  const { title, subtitle } = createTitleCard(scene);\r\n\r\n  // Create the 3D UI manager\r\n  anchor = new BABYLON.AbstractMesh(\"anchor\", scene);\r\n  manager = new GUI.GUI3DManager(scene);\r\n\r\n  console.log(\"3D GUI:\", manager, anchor);\r\n\r\n  var buttonPrev = new GUI.Button3D(\"button-previous\");\r\n  manager.addControl(buttonPrev);\r\n  buttonPrev.linkToTransformNode(anchor);\r\n  buttonPrev.position = new BABYLON.Vector3(-0.3, 0.8, 0);\r\n  buttonPrev.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var textPrev = new GUI.TextBlock();\r\n  textPrev.text = \"Lab 008\";\r\n  textPrev.color = \"white\";\r\n  textPrev.fontSize = 48;\r\n  buttonPrev.content = textPrev;\r\n\r\n  buttonPrev.onPointerUpObservable.add(() => {\r\n    title.value = \"Lab 008\";\r\n    subtitle.value = \"Near Menu\";\r\n  });\r\n\r\n  var buttonNext = new GUI.Button3D(\"button-next\");\r\n  manager.addControl(buttonNext);\r\n  buttonNext.linkToTransformNode(anchor);\r\n  buttonNext.position = new BABYLON.Vector3(0.3, 0.8, 0);\r\n  buttonNext.scaling = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  var textNext = new GUI.TextBlock();\r\n  textNext.text = \"Lab 009\";\r\n  textNext.color = \"white\";\r\n  textNext.fontSize = 48;\r\n  buttonNext.content = textNext;\r\n\r\n  buttonNext.onPointerUpObservable.add(() => {\r\n    title.value = \"Lab 009\";\r\n    subtitle.value = \"Title Card & Vue 3 Composables\";\r\n  });\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Use the LabPlayer\r\n  createLabPlayer(scene, [ground]);\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab009.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab009.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nGrabbing objects and moving them around.\r\n- Example 1: Mesh Picking and Grabbing adapted from this [post](https://forum.babylonjs.com/t/webxr-grab-a-mesh-multiple-controller-support/14251) and this [playground](https://www.babylonjs-playground.com/#LABFNA#2). \r\n- Example 2: Six Dof Dragging [docs](https://doc.babylonjs.com/divingDeeper/behaviors/meshBehaviors#sixdofdragbehavior) - this is super easy to use. For complext meshes, wrap them in a bounding box and add a SixDofDragBehavior to that instead of the mesh.\r\n- Example 3: Pointer Dragging along an axis\r\n- Example 4: Pointer Dragging along a plane. This [playground](https://playground.babylonjs.com/#YD11CG#6) was helpful for understanding how to clamp the bounds of the drag region. It uses a plane to define the region, but this would just as well be done with vectors.\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabConsole } from \"../lab-shared/LabConsole\";\r\n\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n\r\n  // scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 1, -2);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  const { toggleConsole } = createLabConsole(scene);\r\n\r\n  console.log(\"Lab 010 - Grab Lab\");\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Create the default experience\r\n  let xr = await scene.createDefaultXRExperienceAsync({\r\n    floorMeshes: [ground],\r\n  });\r\n\r\n  // let vrCamera;\r\n  // Move the player when thet enter immersive mode\r\n  xr.baseExperience.onInitialXRPoseSetObservable.add((xrCamera) => {\r\n    xrCamera.position.z = -2;\r\n  });\r\n\r\n  //controller input\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      if (motionController.handness === \"left\") {\r\n        const xr_ids = motionController.getComponentIds();\r\n        let yButtonComponent = motionController.getComponent(xr_ids[4]); //y-button\r\n        yButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (yButtonComponent.pressed) {\r\n            toggleConsole(controller);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  console.log(\r\n    \"Example 1 (three stacked boxes) using pointer picking. This is more complext and may not be needed anymore since the new SixDofDragBehavior is now available.\"\r\n  );\r\n  const makeGrabbable = function (model) {\r\n    Object.assign(model, {\r\n      startInteraction(pointerInfo, controllerMesh) {\r\n        console.log(\"props\", this.props);\r\n        this.props = this.props || {};\r\n        if (this.props.grabbedPointerId === undefined) {\r\n          this.props.originalParent = this.parent;\r\n        }\r\n        this.props.grabbedPointerId = pointerInfo.event.pointerId;\r\n        this.setParent(controllerMesh);\r\n      },\r\n      endInteraction(pointerInfo) {\r\n        if (this.props.grabbedPointerId === pointerInfo.event.pointerId) {\r\n          this.setParent(this.props.originalParent);\r\n          delete this.props.grabbedPointerId;\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const selectedMeshes = {};\r\n  // POINTERDOWN\r\n  scene.onPointerObservable.add((pointerInfo) => {\r\n    const { pickInfo } = pointerInfo;\r\n    const { hit } = pickInfo;\r\n    const { pickedMesh } = pickInfo;\r\n    if (!hit) return;\r\n    if (!pickedMesh) return;\r\n    if (!pickedMesh.startInteraction) return;\r\n    selectedMeshes[pointerInfo.event.pointerId] = pickedMesh;\r\n    if (\r\n      xr.baseExperience &&\r\n      xr.baseExperience.state === BABYLON.WebXRState.IN_XR\r\n    ) {\r\n      // XR Mode\r\n      const xrInput = xr.pointerSelection.getXRControllerByPointerId(\r\n        pointerInfo.event.pointerId\r\n      );\r\n      if (!xrInput) return;\r\n      const motionController = xrInput.motionController;\r\n      if (!motionController) return;\r\n      pickedMesh.startInteraction(pointerInfo, motionController.rootMesh);\r\n    } else {\r\n      pickedMesh.startInteraction(pointerInfo, scene.activeCamera);\r\n    }\r\n  }, BABYLON.PointerEventTypes.POINTERDOWN);\r\n\r\n  // POINTERUP\r\n  scene.onPointerObservable.add((pointerInfo) => {\r\n    const pickedMesh = selectedMeshes[pointerInfo.event.pointerId];\r\n    if (pickedMesh) {\r\n      if (pickedMesh.endInteraction) {\r\n        pickedMesh.endInteraction(pointerInfo);\r\n      }\r\n      delete selectedMeshes[pointerInfo.event.pointerId];\r\n    }\r\n  }, BABYLON.PointerEventTypes.POINTERUP);\r\n\r\n  const grabMat1 = new BABYLON.StandardMaterial(\"grab-mat1\", scene);\r\n  grabMat1.diffuseColor = LabColors[\"purple\"];\r\n  grabMat1.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab1 = BABYLON.MeshBuilder.CreateBox(\"grab1\", {\r\n    height: 0.1,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab1.material = grabMat1;\r\n  grab1.position = new BABYLON.Vector3(-0.6, 1, 0);\r\n\r\n  const grabMat2 = new BABYLON.StandardMaterial(\"grab-mat2\", scene);\r\n  grabMat2.diffuseColor = LabColors[\"green\"];\r\n  grabMat2.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab2 = BABYLON.MeshBuilder.CreateBox(\"grab2\", {\r\n    height: 0.1,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab2.material = grabMat2;\r\n  grab1.addChild(grab2);\r\n  grab2.position = new BABYLON.Vector3(0, 0.2, 0);\r\n\r\n  const grabMat3 = new BABYLON.StandardMaterial(\"grab-mat3\", scene);\r\n  grabMat3.diffuseColor = LabColors[\"blue\"];\r\n  grabMat3.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab3 = BABYLON.MeshBuilder.CreateBox(\"grab3\", {\r\n    height: 0.1,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab3.material = grabMat3;\r\n  grab2.addChild(grab3);\r\n  grab3.position = new BABYLON.Vector3(0, 0.2, 0);\r\n\r\n  makeGrabbable(grab1);\r\n  makeGrabbable(grab2);\r\n  makeGrabbable(grab3);\r\n\r\n  console.log(\"Example 2 (orange box) using SixDofDragBehavior \");\r\n  const grabMat4 = new BABYLON.StandardMaterial(\"grab-mat4\", scene);\r\n  grabMat4.diffuseColor = LabColors[\"orange\"];\r\n  grabMat4.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab4 = BABYLON.MeshBuilder.CreateBox(\"grab4\", {\r\n    height: 0.5,\r\n    width: 0.5,\r\n    depth: 0.5,\r\n  });\r\n  grab4.material = grabMat4;\r\n  grab4.position = new BABYLON.Vector3(0.25, 1.2, 0);\r\n\r\n  var boundingBox =\r\n    BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(grab4);\r\n\r\n  // // Create behaviors to drag and scale with pointers in VR\r\n  var sixDofDragBehavior = new BABYLON.SixDofDragBehavior();\r\n  sixDofDragBehavior.allowMultiPointers = true;\r\n  boundingBox.addBehavior(sixDofDragBehavior);\r\n  // I haven't been able to get this working\r\n  var multiPointerScaleBehavior = new BABYLON.MultiPointerScaleBehavior();\r\n  boundingBox.addBehavior(multiPointerScaleBehavior);\r\n\r\n  console.log(\"Example 3 (red box) using PointerDragBehavior along an axis\");\r\n\r\n  const grabMat5 = new BABYLON.StandardMaterial(\"grab-mat5\", scene);\r\n  grabMat5.diffuseColor = LabColors[\"red\"];\r\n  grabMat5.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab5 = BABYLON.MeshBuilder.CreateBox(\"grab5\", {\r\n    height: 0.5,\r\n    width: 0.5,\r\n    depth: 0.5,\r\n  });\r\n  grab5.material = grabMat5;\r\n  grab5.position = new BABYLON.Vector3(1, 1.2, 0);\r\n\r\n  var pointerDragBehavior = new BABYLON.PointerDragBehavior({\r\n    dragAxis: new BABYLON.Vector3(0, 1, 0),\r\n  });\r\n\r\n  grab5.addBehavior(pointerDragBehavior);\r\n\r\n  console.log(\r\n    \"Example 4 (plane and box) using PointerDragBehavior along a plane/normal\"\r\n  );\r\n\r\n  // This playground was helpful for understanding bounds https://playground.babylonjs.com/#YD11CG#6\r\n\r\n  const cardMat = new BABYLON.StandardMaterial(\"card-mat\", scene);\r\n  cardMat.diffuseColor = LabColors[\"dark3\"];\r\n  cardMat.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n\r\n  const cardWidth = 1.5;\r\n  const cardHeight = 1.6;\r\n  const cardThickness = 0.1;\r\n  const card = BABYLON.MeshBuilder.CreateBox(\r\n    \"card\",\r\n    { width: cardWidth, height: cardHeight, depth: cardThickness },\r\n    scene\r\n  );\r\n  card.isPickable = false;\r\n  card.material = cardMat;\r\n  card.position = new BABYLON.Vector3(2.5, 1.5, 0);\r\n\r\n  const boundsWidth = 0.2;\r\n  const boundsHeight = 0.2;\r\n  // create plane in front of card for bounds checking\r\n  const boundsPlane = BABYLON.MeshBuilder.CreatePlane(\r\n    \"boundsPlane\",\r\n    { width: cardWidth - boundsWidth, height: cardHeight - boundsHeight },\r\n    scene\r\n  );\r\n  boundsPlane.isPickable = false;\r\n  boundsPlane.position.x = card.position.x;\r\n  boundsPlane.position.y = card.position.y;\r\n  boundsPlane.position.z = -cardThickness / 2;\r\n  boundsPlane.isVisible = false;\r\n  // boundsPlane.overlayColor = LabColors[\"dark4\"];\r\n  // boundsPlane.renderOverlay = true;\r\n\r\n  const grabMat6 = new BABYLON.StandardMaterial(\"grab-mat6\", scene);\r\n  grabMat6.diffuseColor = LabColors[\"purple\"];\r\n  grabMat6.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab6 = BABYLON.MeshBuilder.CreateBox(\"grab6\", {\r\n    height: 0.5,\r\n    width: 0.5,\r\n    depth: 0.5,\r\n  });\r\n  grab6.material = grabMat6;\r\n  grab6.position = new BABYLON.Vector3(\r\n    boundsPlane.position.x,\r\n    boundsPlane.position.y,\r\n    boundsPlane.position.z\r\n  );\r\n  grab6.scaling = new BABYLON.Vector3(0.2, 0.2, 0.2);\r\n\r\n  var planeDragBehavior = new BABYLON.PointerDragBehavior({\r\n    dragPlaneNormal: boundsPlane.forward,\r\n  });\r\n  planeDragBehavior.useObjectOrientationForDragging = true;\r\n\r\n  planeDragBehavior.validateDrag = (targetPosition) => {\r\n    const bounds = boundsPlane.getBoundingInfo().boundingBox;\r\n    targetPosition.x = BABYLON.Scalar.Clamp(\r\n      targetPosition.x,\r\n      bounds.minimum.x + boundsPlane.position.x,\r\n      bounds.maximum.x + boundsPlane.position.x\r\n    );\r\n    targetPosition.y = BABYLON.Scalar.Clamp(\r\n      targetPosition.y,\r\n      bounds.minimum.y + boundsPlane.position.y,\r\n      bounds.maximum.y + boundsPlane.position.y\r\n    );\r\n    return true;\r\n  };\r\n\r\n  grab6.addBehavior(planeDragBehavior);\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab010.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab010.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nShared VR Player\r\n- Imports the LabPlayer\r\n- Test scene for features of the LabPlayer\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\n// Import the LabPlayer\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  // Use the LabPlayer\r\n  createLabPlayer(scene, [ground]);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab011.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab011.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nGizmos!\r\n- Example 1 creates a gizmo for a single mesh. This option takes a bit more work but offers much more control. I also found these gizmos easier to use in VR than the ones created by GizmoManager.\r\n- Example 2 uses GizmoManager to create a gizmo for a group of meshes.\r\n- Spacebar or VR X button to cycle gizmos.\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\n\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n  const manager = new GUI.GUI3DManager(scene);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 1, -2);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  console.log(\"Lab 012 - Gizmos!\");\r\n  const gizMode = ref(0);\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Use the LabPlayer\r\n  const { xr } = await createLabPlayer(scene, [ground]);\r\n  // Just a quick hack to add an action to the X button\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      const xr_ids = motionController.getComponentIds();\r\n      if (motionController.handness === \"left\") {\r\n        let xButtonComponent = motionController.getComponent(xr_ids[3]); //x-positionButton\r\n        xButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (xButtonComponent.pressed) {\r\n            console.log(\"X Button Pressed\");\r\n            if (gizMode.value === 0) {\r\n              gizMode.value = 1;\r\n            } else if (gizMode.value === 1) {\r\n              gizMode.value = 2;\r\n            } else {\r\n              gizMode.value = 0;\r\n            }\r\n            console.log(\"gizMode\", gizMode.value);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Example 1: Manual creation of a gizmos on a mesh\r\n  const boxMat = new BABYLON.StandardMaterial(\"box-mat\", scene);\r\n  boxMat.diffuseColor = LabColors[\"purple\"];\r\n  boxMat.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const box = BABYLON.MeshBuilder.CreateBox(\"box\", {\r\n    height: 0.5,\r\n    width: 0.5,\r\n    depth: 0.5,\r\n  });\r\n  box.material = boxMat;\r\n  box.position = new BABYLON.Vector3(-1, 1.0, 0);\r\n\r\n  const boundingBox =\r\n    BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(box);\r\n\r\n  const sixDofDragBehavior = new BABYLON.SixDofDragBehavior();\r\n  boundingBox.addBehavior(sixDofDragBehavior);\r\n\r\n  // Create utility layer the positionGizmo will be rendered on\r\n  const utilLayer = new BABYLON.UtilityLayerRenderer(scene);\r\n\r\n  // Create the positionGizmo and attach to the sphere\r\n  const positionGizmo = new BABYLON.PositionGizmo(utilLayer);\r\n  positionGizmo.attachedMesh = box;\r\n  positionGizmo.scaleRatio = 2;\r\n\r\n  positionGizmo.updateGizmoRotationToMatchAttachedMesh = true;\r\n  positionGizmo.updateGizmoPositionToMatchAttachedMesh = true;\r\n\r\n  const rotationGizmo = new BABYLON.RotationGizmo(utilLayer);\r\n  positionGizmo.scaleRatio = 2;\r\n\r\n  rotationGizmo.updateGizmoRotationToMatchAttachedMesh = true;\r\n  rotationGizmo.updateGizmoPositionToMatchAttachedMesh = true;\r\n\r\n  const scaleGizmo = new BABYLON.ScaleGizmo(utilLayer);\r\n  scaleGizmo.scaleRatio = 2;\r\n\r\n  // Keep the scaleGizmo fixed to local rotation\r\n  scaleGizmo.updateGizmoRotationToMatchAttachedMesh = true;\r\n  scaleGizmo.updateGizmoPositionToMatchAttachedMesh = true;\r\n\r\n  // Create app bar\r\n  const appBar = new BABYLON.TransformNode(\"\");\r\n  appBar.scaling.scaleInPlace(0.1);\r\n  const panel = new GUI.PlanePanel();\r\n  panel.margin = 0;\r\n  panel.rows = 1;\r\n  manager.addControl(panel);\r\n  panel.linkToTransformNode(appBar);\r\n  const positionButton = new GUI.HolographicButton(\"orientation\");\r\n  panel.addControl(positionButton);\r\n  positionButton.text = \"Position\";\r\n  positionButton.onPointerClickObservable.add(() => {\r\n    gizMode.value = 0;\r\n  });\r\n  const rotationButton = new GUI.HolographicButton(\"orientation\");\r\n  panel.addControl(rotationButton);\r\n  rotationButton.text = \"Rotation\";\r\n  rotationButton.onPointerClickObservable.add(() => {\r\n    gizMode.value = 1;\r\n  });\r\n  const scaleButton = new GUI.HolographicButton(\"orientation\");\r\n  panel.addControl(scaleButton);\r\n  scaleButton.text = \"Scale\";\r\n  scaleButton.onPointerClickObservable.add(() => {\r\n    gizMode.value = 2;\r\n  });\r\n\r\n  //attach app bar to bounding box\r\n  const behavior = new BABYLON.AttachToBoxBehavior(appBar);\r\n  boundingBox.addBehavior(behavior);\r\n\r\n  // Example 2: Automatic creation of gizmos using GizmoManager on multiple meshes\r\n  const grabMat1 = new BABYLON.StandardMaterial(\"grab-mat1\", scene);\r\n  grabMat1.diffuseColor = LabColors[\"purple\"];\r\n  grabMat1.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab1 = BABYLON.MeshBuilder.CreateBox(\"grab1\", {\r\n    height: 0.4,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab1.material = grabMat1;\r\n  grab1.position = new BABYLON.Vector3(0, 1, 0);\r\n\r\n  const grabMat2 = new BABYLON.StandardMaterial(\"grab-mat2\", scene);\r\n  grabMat2.diffuseColor = LabColors[\"green\"];\r\n  grabMat2.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab2 = BABYLON.MeshBuilder.CreateBox(\"grab2\", {\r\n    height: 0.4,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab2.material = grabMat2;\r\n  //   grab1.addChild(grab2);\r\n  grab2.position = new BABYLON.Vector3(0.5, 1, 0);\r\n\r\n  const grabMat3 = new BABYLON.StandardMaterial(\"grab-mat3\", scene);\r\n  grabMat3.diffuseColor = LabColors[\"blue\"];\r\n  grabMat3.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const grab3 = BABYLON.MeshBuilder.CreateBox(\"grab3\", {\r\n    height: 0.4,\r\n    width: 0.4,\r\n    depth: 0.4,\r\n  });\r\n  grab3.material = grabMat3;\r\n  //   grab2.addChild(grab3);\r\n  grab3.position = new BABYLON.Vector3(1, 1, 0);\r\n\r\n  const boundingBox1 =\r\n    BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(grab1);\r\n  const boundingBox2 =\r\n    BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(grab2);\r\n  const boundingBox3 =\r\n    BABYLON.BoundingBoxGizmo.MakeNotPickableAndWrapInBoundingBox(grab3);\r\n\r\n  const gizmoManager = new BABYLON.GizmoManager(scene);\r\n  gizmoManager.scaleRatio = 3;\r\n  gizmoManager.positionGizmoEnabled = true;\r\n  gizmoManager.rotationGizmoEnabled = false;\r\n  gizmoManager.scaleGizmoEnabled = false;\r\n  gizmoManager.boundingBoxGizmoEnabled = false;\r\n  gizmoManager.attachableMeshes = [boundingBox1, boundingBox2, boundingBox3];\r\n\r\n  // END WebXR --------------------------------------------------\r\n\r\n  document.onkeydown = (e) => {\r\n    if (e.code == \"Space\") {\r\n      if (gizMode.value === 0) {\r\n        gizMode.value = 1;\r\n      } else if (gizMode.value === 1) {\r\n        gizMode.value = 2;\r\n      } else {\r\n        gizMode.value = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  watch(gizMode, (newVal) => {\r\n    if (newVal === 0) {\r\n      // Toggle gizmos for Example 1\r\n      positionGizmo.attachedMesh = !positionGizmo.attachedMesh ? box : null;\r\n      rotationGizmo.attachedMesh = null;\r\n      scaleGizmo.attachedMesh = null;\r\n\r\n      // Toggle gizmos for Example 2\r\n      gizmoManager.positionGizmoEnabled = true;\r\n      gizmoManager.rotationGizmoEnabled = false;\r\n      gizmoManager.scaleGizmoEnabled = false;\r\n    } else if (newVal === 1) {\r\n      // Toggle gizmos for Example 1\r\n      positionGizmo.attachedMesh = null;\r\n      rotationGizmo.attachedMesh = !rotationGizmo.attachedMesh ? box : null;\r\n      scaleGizmo.attachedMesh = null;\r\n\r\n      // Toggle gizmos for Example 2\r\n      gizmoManager.positionGizmoEnabled = false;\r\n      gizmoManager.rotationGizmoEnabled = true;\r\n      gizmoManager.scaleGizmoEnabled = false;\r\n    } else if (newVal === 2) {\r\n      // Toggle gizmos for Example 1\r\n      positionGizmo.attachedMesh = null;\r\n      rotationGizmo.attachedMesh = null;\r\n      scaleGizmo.attachedMesh = !scaleGizmo.attachedMesh ? box : null;\r\n\r\n      // Toggle gizmos for Example 2\r\n      gizmoManager.positionGizmoEnabled = false;\r\n      gizmoManager.rotationGizmoEnabled = false;\r\n      gizmoManager.scaleGizmoEnabled = true;\r\n    }\r\n  });\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab012.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab012.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nFollow Behaviors\r\n- Purple sphere can place itself anywhere in my view\r\n- Green sphere is constrained to a fixed pitch of -35 degrees\r\n\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\n\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 1, -2);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  console.log(\"Lab 012 - Gizmos!\");\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n  // WebXRDefaultExperience\r\n\r\n  // Use the LabPlayer\r\n  await createLabPlayer(scene, [ground]);\r\n\r\n  console.log(\"Example 1: Free to follow\");\r\n  const subjectMat = new BABYLON.StandardMaterial(\"subject-mat\", scene);\r\n  subjectMat.diffuseColor = LabColors[\"purple\"];\r\n  subjectMat.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n\r\n  const subject = BABYLON.MeshBuilder.CreateSphere(\"subject\", {\r\n    diameter: 0.25,\r\n  });\r\n  subject.material = subjectMat;\r\n  subject.position = new BABYLON.Vector3(0, 1.0, 0);\r\n\r\n  var followBehavior = new BABYLON.FollowBehavior();\r\n  followBehavior.defaultDistance = 1.5;\r\n  followBehavior.minimumDistance = 1.2;\r\n  followBehavior.maximumDistance = 2.4;\r\n  followBehavior.lerpTime = 1000;\r\n  followBehavior.attach(subject);\r\n\r\n  // // Create behaviors to drag and scale with pointers in VR\r\n  var sixDofDragBehavior = new BABYLON.SixDofDragBehavior();\r\n  sixDofDragBehavior.allowMultiPointers = true;\r\n  subject.addBehavior(sixDofDragBehavior);\r\n\r\n  console.log(\"Example 2: Constrained to the bottom of the scene.\");\r\n  const subjectMat2 = new BABYLON.StandardMaterial(\"subject-mat2\", scene);\r\n  subjectMat2.diffuseColor = LabColors[\"green\"];\r\n  subjectMat2.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n\r\n  const subject2 = BABYLON.MeshBuilder.CreateSphere(\"subject2\", {\r\n    diameter: 0.25,\r\n  });\r\n  subject2.material = subjectMat2;\r\n  subject2.position = new BABYLON.Vector3(0, 1.0, 0);\r\n\r\n  var followBehavior2 = new BABYLON.FollowBehavior();\r\n  followBehavior2.defaultDistance = 1.2;\r\n  followBehavior2.minimumDistance = 1;\r\n  followBehavior2.maximumDistance = 2;\r\n  followBehavior2.ignoreCameraPitchAndRoll = true;\r\n  followBehavior2.pitchOffset = -35;\r\n  followBehavior2.lerpTime = 1000;\r\n  followBehavior2.attach(subject2);\r\n\r\n  // // Create behaviors to drag and scale with pointers in VR\r\n  var sixDofDragBehavior2 = new BABYLON.SixDofDragBehavior();\r\n  sixDofDragBehavior2.allowMultiPointers = true;\r\n  subject2.addBehavior(sixDofDragBehavior2);\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab014.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab014.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nResizable GUI Cards\r\nSpacebar or VR X button to cycle gizmos / examples.\r\n- Example 1: Scale the card while keeping the aspect ratio\r\n- Example 2: Scale the card while streaching the content\r\n- Example 3: Scale the card while streaching the content, with snapping\r\n- Example 4: Attempt at scaling the card while maintaining the aspect ratio (failed, so far)\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\n// Import the LabPlayer\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n  const gizMode = ref(0);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  scene.getCameraByName(\"camera\").position = new BABYLON.Vector3(0, 1, -2);\r\n\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n\r\n  const card = BABYLON.MeshBuilder.CreateBox(\"detail-card\", {\r\n    width: 1,\r\n    height: 1,\r\n    depth: 0.2,\r\n  });\r\n  card.position = new BABYLON.Vector3(0, 1, 0);\r\n\r\n  const cardMaterial = new BABYLON.StandardMaterial(\"card-material\", scene);\r\n  cardMaterial.diffuseColor = LabColors[\"dark3\"];\r\n  cardMaterial.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  card.material = cardMaterial;\r\n\r\n  const plane = BABYLON.MeshBuilder.CreatePlane(\r\n    \"detail-plane\",\r\n    {\r\n      width: 1,\r\n      height: 1,\r\n    },\r\n    scene\r\n  );\r\n  plane.position.z = -0.11;\r\n  plane.parent = card;\r\n\r\n  const advancedTexture = GUI.AdvancedDynamicTexture.CreateForMesh(\r\n    plane,\r\n    1 * 1024,\r\n    1 * 1024\r\n  );\r\n  advancedTexture.name = \"title-card-texture\";\r\n\r\n  var sv = new GUI.ScrollViewer(\"logger-scroll\");\r\n  sv.thickness = 48;\r\n  sv.color = \"#3e4a5d\";\r\n  sv.background = \"#3e4a5d\";\r\n  sv.opacity = 1;\r\n  sv.width = \"100%\";\r\n  sv.height = \"100%\";\r\n  sv.barSize = 20;\r\n  sv.barColor = \"#53637b\";\r\n  sv.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n\r\n  advancedTexture.addControl(sv);\r\n\r\n  var tb = new GUI.TextBlock(\"logger-text\");\r\n  tb.text = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\r\n  But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\r\n    `;\r\n  tb.textWrapping = true;\r\n\r\n  tb.width = 1;\r\n  tb.height = 3;\r\n  tb.paddingTop = \"1%\";\r\n  tb.paddingLeft = \"30px\";\r\n  tb.paddingRight = \"20px\";\r\n  tb.paddingBottom = \"1%\";\r\n  tb.horizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.verticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.textHorizontalAlignment = GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n  tb.textVerticalAlignment = GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n  tb.color = \"#d3d9e1\";\r\n  tb.fontSize = \"36px\";\r\n\r\n  sv.addControl(tb);\r\n\r\n  // Create utility layer the gizmos will be rendered on\r\n  var utilLayer = new BABYLON.UtilityLayerRenderer(scene);\r\n\r\n  // Create the gizmo1 to scale the card along x and y\r\n  var gizmo1 = new BABYLON.AxisScaleGizmo(\r\n    new BABYLON.Vector3(1, 1, 0),\r\n    BABYLON.Color3.FromHexString(\"#00b894\"),\r\n    utilLayer\r\n  );\r\n  gizmo1.attachedMesh = card;\r\n\r\n  // Create the gizmo1 to scale the card along x only\r\n  var gizmo2 = new BABYLON.AxisScaleGizmo(\r\n    new BABYLON.Vector3(1, 0, 0),\r\n    BABYLON.Color3.FromHexString(\"#8854d0\"),\r\n    utilLayer\r\n  );\r\n  gizmo2.attachedMesh = card;\r\n\r\n  var gizmo3 = new BABYLON.AxisScaleGizmo(\r\n    new BABYLON.Vector3(0, 1, 0),\r\n    BABYLON.Color3.FromHexString(\"#3867d6\"),\r\n    utilLayer\r\n  );\r\n  gizmo3.snapDistance = 0.1;\r\n  gizmo3.onSnapObservable.add((e) => {\r\n    console.log(\"snap\", e);\r\n  });\r\n  gizmo3.attachedMesh = card;\r\n\r\n  var gizmo4 = new BABYLON.BoundingBoxGizmo(\r\n    BABYLON.Color3.FromHexString(\"#0984e3\"),\r\n    utilLayer\r\n  );\r\n  gizmo4.setEnabledRotationAxis(\"\");\r\n  gizmo4.scaleBoxSize = 0.05;\r\n  gizmo4.onScaleBoxDragEndObservable.add(() => {\r\n    console.log(\"start scale\", advancedTexture.getSize());\r\n\r\n    advancedTexture.scaleTo(\r\n      Math.round(1024 * card.scaling.x),\r\n      Math.round(1024 * card.scaling.y)\r\n    );\r\n    // Mark as dirty to force redraw - may not be needed in latest version\r\n    advancedTexture.markAsDirty();\r\n  });\r\n  gizmo4.attachedMesh = card;\r\n\r\n  gizmo1.attachedMesh = null;\r\n  gizmo2.attachedMesh = null;\r\n  gizmo3.attachedMesh = null;\r\n  gizmo4.attachedMesh = null;\r\n\r\n  // Use the LabPlayer\r\n  const { xr } = await createLabPlayer(scene, [ground]);\r\n  // Just a quick hack to add an action to the X button\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      const xr_ids = motionController.getComponentIds();\r\n      if (motionController.handness === \"left\") {\r\n        let xButtonComponent = motionController.getComponent(xr_ids[3]); //x-positionButton\r\n        xButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (xButtonComponent.pressed) {\r\n            console.log(\"X Button Pressed\");\r\n            if (gizMode.value === 0) {\r\n              gizMode.value = 1;\r\n            } else if (gizMode.value === 1) {\r\n              gizMode.value = 2;\r\n            } else if (gizMode.value === 2) {\r\n              gizMode.value = 3;\r\n            } else {\r\n              gizMode.value = 0;\r\n            }\r\n            console.log(\"gizMode\", gizMode.value);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  document.onkeydown = (e) => {\r\n    if (e.code == \"Space\") {\r\n      if (gizMode.value === 0) {\r\n        gizMode.value = 1;\r\n      } else if (gizMode.value === 1) {\r\n        gizMode.value = 2;\r\n      } else if (gizMode.value === 2) {\r\n        gizMode.value = 3;\r\n      } else {\r\n        gizMode.value = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  watch(gizMode, (newVal) => {\r\n    if (newVal === 0) {\r\n      // Toggle gizmos for Example 1\r\n      gizmo1.attachedMesh = !gizmo1.attachedMesh ? card : null;\r\n      gizmo2.attachedMesh = null;\r\n      gizmo3.attachedMesh = null;\r\n      gizmo4.attachedMesh = null;\r\n    } else if (newVal === 1) {\r\n      // Toggle gizmos for Example 1\r\n      gizmo1.attachedMesh = null;\r\n      gizmo2.attachedMesh = !gizmo2.attachedMesh ? card : null;\r\n      gizmo3.attachedMesh = null;\r\n      gizmo4.attachedMesh = null;\r\n    } else if (newVal === 2) {\r\n      // Toggle gizmos for Example 1\r\n      gizmo1.attachedMesh = null;\r\n      gizmo2.attachedMesh = null;\r\n      gizmo3.attachedMesh = !gizmo3.attachedMesh ? card : null;\r\n      gizmo4.attachedMesh = null;\r\n    } else {\r\n      // Toggle gizmos for Example 1\r\n      gizmo1.attachedMesh = null;\r\n      gizmo2.attachedMesh = null;\r\n      gizmo3.attachedMesh = null;\r\n      gizmo4.attachedMesh = !gizmo4.attachedMesh ? card : null;\r\n    }\r\n  });\r\n\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab015.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab015.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nconst labNotes = `\r\nSnapping and History\r\n- Simple box with a drag widget, snapping to the grid\r\n- Uses VueUse \\`useRefHistory()\\` to add Undo / Redo\r\n- Keyboard: z = undo, x = redo\r\n- VR Controller: a = undo, b = redo\r\n`;\r\n\r\nimport * as BABYLON from \"babylonjs\";\r\nimport \"babylonjs-loaders\";\r\nimport { ref, onMounted, watch } from \"@vue/runtime-core\";\r\nimport { useRefHistory } from \"@vueuse/core\";\r\n\r\nimport LabLayout from \"../components/LabLayout.vue\";\r\nimport addLabCamera from \"../lab-shared/LabCamera\";\r\nimport addLabLights from \"../lab-shared/LabLights\";\r\nimport addLabRoom from \"../lab-shared/LabRoom\";\r\nimport { createLabPlayer } from \"../lab-shared/LabPlayer\";\r\nimport LabColors from \"../lab-shared/LabColors\";\r\n\r\nconst bjsCanvas = ref(null);\r\n\r\n// A ref to store the current box X position\r\nconst dragX = ref(0.5);\r\n// History tracking for the box X position\r\nconst { undo, redo } = useRefHistory(dragX);\r\n\r\nlet engine;\r\nlet scene;\r\n\r\nconst createScene = async (canvas) => {\r\n  // Create and customize the scene\r\n  engine = new BABYLON.Engine(canvas);\r\n  scene = new BABYLON.Scene(engine);\r\n\r\n  // Use the shared lab tools\r\n  addLabCamera(canvas, scene);\r\n  addLabLights(scene);\r\n  const ground = addLabRoom(scene);\r\n  console.log(\"Lab 012 - Gizmos!\");\r\n\r\n  const subjectMat = new BABYLON.StandardMaterial(\"grab-mat1\", scene);\r\n  subjectMat.diffuseColor = LabColors[\"purple\"];\r\n  subjectMat.specularColor = new BABYLON.Color3(0.2, 0.2, 0.2);\r\n  const subject = BABYLON.MeshBuilder.CreateBox(\"grab1\", {\r\n    height: 1,\r\n    width: 1,\r\n    depth: 1,\r\n  });\r\n  subject.material = subjectMat;\r\n  subject.position = new BABYLON.Vector3(0.5, 0.5, 0.5);\r\n\r\n  // Create utility layer the positionGizmo will be rendered on\r\n  const utilLayer = new BABYLON.UtilityLayerRenderer(scene);\r\n\r\n  // Create the positionGizmo and attach to the sphere\r\n  var gizmo = new BABYLON.AxisDragGizmo(\r\n    new BABYLON.Vector3(1, 0, 0),\r\n    BABYLON.Color3.FromHexString(\"#8854d0\"),\r\n    utilLayer\r\n  );\r\n  gizmo.scaleRatio = 2;\r\n  gizmo.updateGizmoRotationToMatchAttachedMesh = true;\r\n  gizmo.updateGizmoPositionToMatchAttachedMesh = true;\r\n  gizmo.attachedMesh = subject;\r\n  gizmo.snapDistance = 1;\r\n  // Write the x position to the dragX ref after each drag\r\n  gizmo.onSnapObservable.add(() => {\r\n    dragX.value = subject.position.x;\r\n  });\r\n\r\n  // START WebXR ------------------------------------------------------------\r\n\r\n  // Use the LabPlayer\r\n  const { xr } = await createLabPlayer(scene, [ground]);\r\n  // Just a quick hack to add an action to the X button\r\n  xr.input.onControllerAddedObservable.add((controller) => {\r\n    controller.onMotionControllerInitObservable.add((motionController) => {\r\n      const xr_ids = motionController.getComponentIds();\r\n      if (motionController.handness === \"right\") {\r\n        let aButtonComponent = motionController.getComponent(xr_ids[3]); //a-button\r\n        aButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (aButtonComponent.pressed) {\r\n            console.log(\"A Button Pressed, undo()\");\r\n            undo();\r\n          }\r\n        });\r\n        let bButtonComponent = motionController.getComponent(xr_ids[4]); //b-button\r\n        bButtonComponent.onButtonStateChangedObservable.add(() => {\r\n          if (bButtonComponent.pressed) {\r\n            console.log(\"B Button Pressed, redo()\");\r\n            redo();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // END WebXR --------------------------------------------------\r\n  document.onkeydown = (e) => {\r\n    if (e.code == \"KeyZ\") {\r\n      console.log(\"trying to undo\");\r\n      undo();\r\n    }\r\n    {\r\n      if (e.code == \"KeyX\") {\r\n        redo();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Watch the dragX ref and update the subject position\r\n  watch(dragX, (newVal, oldVal) => {\r\n    if (newVal !== oldVal) {\r\n      subject.position.x = newVal;\r\n    }\r\n  });\r\n  engine.runRenderLoop(() => {\r\n    scene.render();\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  if (bjsCanvas.value) {\r\n    createScene(bjsCanvas.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LabLayout :labNotes=\"labNotes\">\r\n    <template v-slot:scene>\r\n      <canvas style=\"overflow: hidden\" id=\"bjsCanvas\" ref=\"bjsCanvas\" />\r\n    </template>\r\n  </LabLayout>\r\n</template>\r\n","import script from \"./Lab016.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lab016.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\r\nimport Home from \"../views/Home.vue\";\r\nimport Lab000 from \"../labs/Lab000.vue\";\r\nimport Lab001 from \"../labs/Lab001.vue\";\r\nimport Lab002 from \"../labs/Lab002.vue\";\r\nimport Lab003 from \"../labs/Lab003.vue\";\r\nimport Lab004 from \"../labs/Lab004.vue\";\r\nimport Lab005 from \"../labs/Lab005.vue\";\r\nimport Lab006 from \"../labs/Lab006.vue\";\r\nimport Lab007 from \"../labs/Lab007.vue\";\r\nimport Lab008 from \"../labs/Lab008.vue\";\r\nimport Lab009 from \"../labs/Lab009.vue\";\r\nimport Lab010 from \"../labs/Lab010.vue\";\r\nimport Lab011 from \"../labs/Lab011.vue\";\r\nimport Lab012 from \"../labs/Lab012.vue\";\r\n// import Lab013 from \"../labs/Lab013.vue\";\r\nimport Lab014 from \"../labs/Lab014.vue\";\r\nimport Lab015 from \"../labs/Lab015.vue\";\r\nimport Lab016 from \"../labs/Lab016.vue\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: Home\r\n  },\r\n  {\r\n    path: \"/Lab000\",\r\n    name: \"Lab000\",\r\n    component: Lab000,\r\n    meta: {\r\n      title: \"Lab 000\",\r\n      subtitle: \"Hello Canvatorium\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab001\",\r\n    name: \"Lab001\",\r\n    component: Lab001,\r\n    meta: {\r\n      title: \"Lab 001\",\r\n      subtitle: \"Picking Colors\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n\r\n  {\r\n    path: \"/Lab002\",\r\n    name: \"Lab002\",\r\n    component: Lab002,\r\n    meta: {\r\n      title: \"Lab 002\",\r\n      subtitle: \"watch() / watchEffect()\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab003\",\r\n    name: \"Lab003\",\r\n    component: Lab003,\r\n    meta: {\r\n      title: \"Lab 003\",\r\n      subtitle: \"Default XR Experience\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab004\",\r\n    name: \"Lab004\",\r\n    component: Lab004,\r\n    meta: {\r\n      title: \"Lab 004\",\r\n      subtitle: \"XR Controller Buttons\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab005\",\r\n    name: \"Lab005\",\r\n    component: Lab005,\r\n    meta: {\r\n      title: \"Lab 005\",\r\n      subtitle: \"Router Nav to Lab 006\",\r\n      status: \"failed\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab006\",\r\n    name: \"Lab006\",\r\n    component: Lab006,\r\n    meta: {\r\n      title: \"Lab 006\",\r\n      subtitle: \"Router Nav to Lab 005\",\r\n      status: \"failed\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab007\",\r\n    name: \"Lab007\",\r\n    component: Lab007,\r\n    meta: {\r\n      title: \"Lab 007\",\r\n      subtitle: \"Console... Log(?)\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab008\",\r\n    name: \"Lab008\",\r\n    component: Lab008,\r\n    meta: {\r\n      title: \"Lab 008\",\r\n      subtitle: \"Near Menu\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab009\",\r\n    name: \"Lab009\",\r\n    component: Lab009,\r\n    meta: {\r\n      title: \"Lab 009\",\r\n      subtitle: \"Title Card & Vue 3 Composables\",\r\n      status: \"complete\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab010\",\r\n    name: \"Lab010\",\r\n    component: Lab010,\r\n    meta: {\r\n      title: \"Lab 010\",\r\n      subtitle: \"Grag Lab\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab011\",\r\n    name: \"Lab011\",\r\n    component: Lab011,\r\n    meta: {\r\n      title: \"Lab 011\",\r\n      subtitle: \"Shared Lab Player\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab012\",\r\n    name: \"Lab012\",\r\n    component: Lab012,\r\n    meta: {\r\n      title: \"Lab 012\",\r\n      subtitle: \"Gizmos!\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  // {\r\n  //   path: \"/Lab013\",\r\n  //   name: \"Lab013\",\r\n  //   component: Lab013,\r\n  //   meta: {\r\n  //     title: \"Lab 013\",\r\n  //     subtitle: \"Nothing to see here. Move along.\",\r\n  //     status: \"running\"\r\n  //   }\r\n  // },\r\n  {\r\n    path: \"/Lab014\",\r\n    name: \"Lab014\",\r\n    component: Lab014,\r\n    meta: {\r\n      title: \"Lab 014\",\r\n      subtitle: \"Follow Behaviors\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab015\",\r\n    name: \"Lab015\",\r\n    component: Lab015,\r\n    meta: {\r\n      title: \"Lab 015\",\r\n      subtitle: \"Resizable GUI Cards\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/Lab016\",\r\n    name: \"Lab016\",\r\n    component: Lab016,\r\n    meta: {\r\n      title: \"Lab 016\",\r\n      subtitle: \"Snapping and History\",\r\n      status: \"running\"\r\n    }\r\n  },\r\n  {\r\n    path: \"/about\",\r\n    name: \"About\",\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ \"../views/About.vue\")\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nexport default router;\r\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(store).use(router).mount(\"#app\");\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LabLayout.vue?vue&type=style&index=0&id=3bca8c2a&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Home.vue?vue&type=style&index=0&id=330a9914&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Lab000.vue?vue&type=style&index=0&id=bc42271c&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=799c420f&lang=css\""],"sourceRoot":""}